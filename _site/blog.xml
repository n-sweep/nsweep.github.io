<?xml version="1.0" encoding="UTF-8"?>
<rss  xmlns:atom="http://www.w3.org/2005/Atom" 
      xmlns:media="http://search.yahoo.com/mrss/" 
      xmlns:content="http://purl.org/rss/1.0/modules/content/" 
      xmlns:dc="http://purl.org/dc/elements/1.1/" 
      version="2.0">
<channel>
<title>cd ~/sweep.sh/website</title>
<link>https://n-sweep.github.io/blog.html</link>
<atom:link href="https://n-sweep.github.io/blog.xml" rel="self" type="application/rss+xml"/>
<description>a small blog allegedly about tech and data</description>
<generator>quarto-1.6.33</generator>
<lastBuildDate>Mon, 28 Oct 2024 04:00:00 GMT</lastBuildDate>
<item>
  <title>Go in Python, Part 2</title>
  <dc:creator>n sweep</dc:creator>
  <link>https://n-sweep.github.io/posts/2024-10-28-go-in-python-2/</link>
  <description><![CDATA[ 





<p>Read: <a href="https://sweep.sh/posts/2024-10-24-go-in-python-1/">Go in Python, Part 1</a></p>
<figure class="figure">
<img src="https://n-sweep.github.io/posts/2024-10-28-go-in-python-2/images/go_weird_ai_image.png" class="figure-img">
<figcaption>
<i>Some weird generative AI art “about Go”. White seems to be in trouble.</i>
</figcaption>
</figure>
<p>I have worked with a lot of web APIs, and I typically feel very comfortable with them. As I mentioned in last time, I was mostly satisfied by the simple existence of the API, though I stuck around long enough to note that the data we could request included a set of moves, either in <a href="https://en.wikipedia.org/wiki/JSON">JSON</a> or something called an SGF file (more on that later). When I reached this point and was working through this problem initially, I felt I had made a mistake not going deeper on the API before beginning the game engine. However, in hindsight, I may have given up after failing this step for the third time had I not already built the engine.</p>
<section id="documentation-important" class="level1">
<h1>Documentation Important</h1>
<p><img src="https://n-sweep.github.io/posts/2024-10-28-go-in-python-2/images/ogs_api_search.png"></p>
<p>Searching for the OGS API yields a number of results, which boil down to a few contradicting pieces of documentation and some forums.</p>
<ul>
<li><a href="https://ogs.docs.apiary.io/#">ogs.docs.apiary.io</a></li>
<li><a href="https://ogs.readme.io/docs/real-time-api">ogs.readme.io</a></li>
<li><a href="https://apidocs.online-go.com/">apidocs.online-go.com</a></li>
<li><a href="https://forums.online-go.com">some forums</a></li>
</ul>
<p>On my initial visits, <a href="https://ogs.docs.apiary.io/#">ogs.docs.apiary.io</a> looks like what I need; <a href="https://ogs.readme.io/docs/real-time-api">ogs.readme.io</a> looks like it might be relevant but only has information on the real time API, which isn’t necessarily what I’m after; <a href="https://apidocs.online-go.com/">apidocs.online-go.com</a> seems out of date, with no information regarding authentication.</p>
<p>Acting on these assumptions, I spent a week or two failing to implement anything successfully. I found forum posts complaining of incomplete and contradicting documentation, GitHub repos of other python implementations that no longer worked, and frustrated, I stepped away for a few days. But it kept eating at me that we were still able to play via a 3rd party Android app, <a href="https://play.google.com/store/apps/details?id=io.zenandroid.onlinego&amp;hl=en_US">Sente</a>, which is built specifically to play on OGS. They must have a functional API. Finally I stumbled on the <a href="https://forums.online-go.com/t/ogs-api-notes/17136">magic forum post that would make all my dreams come true</a> (major thanks to forum poster walken).</p>
<p>I had two major takeaways from this post that allowed me to move forward with this project:</p>
<ol type="1">
<li>Authentication is done comepletely differently than in the documentation I was attempting to follow
<ul>
<li><img src="https://n-sweep.github.io/posts/2024-10-28-go-in-python-2/images/ogs_auth.png"></li>
</ul></li>
<li>It turns out that, despite the lack of information on authentication, <a href="https://apidocs.online-go.com/">apidocs.online-go.com</a> is the appropriate documentation
<ul>
<li>This means no authentication is required to request public games. Works for me!</li>
</ul></li>
</ol>
</section>
<section id="its-apiing-time" class="level1">
<h1>It’s APIing Time</h1>
<section id="retrieving-game-data" class="level2">
<h2 class="anchored" data-anchor-id="retrieving-game-data">Retrieving Game Data</h2>
<p>Games on OGS have IDs, which are included in their url: <code>https://online-go.com/game/########</code>. According to the documentation, this ID is what is required for the <code>/games</code> endpoint on the API:</p>
<p><img src="https://n-sweep.github.io/posts/2024-10-28-go-in-python-2/images/ogs_games_doc.png"></p>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode py code-with-copy"><code class="sourceCode python"><span id="cb1-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> requests</span>
<span id="cb1-2"></span>
<span id="cb1-3">BASE_URL <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"https://online-go.com/api/v1/games/"</span></span>
<span id="cb1-4">game_id <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"68984609"</span></span>
<span id="cb1-5">request_url <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> BASE_URL <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> game_id</span>
<span id="cb1-6"></span>
<span id="cb1-7">r <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> requests.get(request_url)</span>
<span id="cb1-8"></span>
<span id="cb1-9"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(r)</span>
<span id="cb1-10"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(r.url)</span></code></pre></div>
<pre><code>&lt;Response [200]&gt;
https://online-go.com/api/v1/games/68984609</code></pre>
<p>200, success! The response comes with a sizeable piece of JSON data, which I’ve heavily truncated for brevity. It includes a list of moves that make up the game so far:</p>
<div class="sourceCode" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode json code-with-copy"><code class="sourceCode json"><span id="cb3-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb3-2">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">"id"</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">:</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">68984609</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb3-3">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">"all_players"</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">:</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">[</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1606336</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1605683</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">]</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb3-4">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">"name"</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">:</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Friendly Match"</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb3-5">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">"players"</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">:</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">{</span> <span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">...</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">},</span></span>
<span id="cb3-6">  <span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">...</span></span>
<span id="cb3-7">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">"gamedata"</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">:</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb3-8">    <span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">...</span></span>
<span id="cb3-9">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">"moves"</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">:</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">[</span> <span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">...</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">]</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb3-10">    <span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">...</span></span>
<span id="cb3-11">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">},</span></span>
<span id="cb3-12">  <span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">...</span></span>
<span id="cb3-13"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
<section id="smart-game-format" class="level2">
<h2 class="anchored" data-anchor-id="smart-game-format">Smart Game Format</h2>
<p>However, as I mentioned at the top and as you can see in the previous documentation screenshot, we can also get something called an SGF, or “Smart Game Format”, file. The above JSON response is very data-rich, but it’s also very specific to OGS. This Smart Game Format seems like something a bit more platform agnostic, so I think it makes sense to build against that as input.</p>
<p>A quick search rendered some <a href="https://www.red-bean.com/sgf/index.html">SGF Documentation</a>; using this as a reference, we’ll grab the SGF file for our game. I’ve chosen an ongoing game with only a few moves, again for the sake of brevity:</p>
<div class="sourceCode" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode py code-with-copy"><code class="sourceCode python"><span id="cb4-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> os</span>
<span id="cb4-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> requests</span>
<span id="cb4-3"></span>
<span id="cb4-4">BASE_URL <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"https://online-go.com/api/v1/games"</span></span>
<span id="cb4-5">game_id <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"68984609"</span></span>
<span id="cb4-6">request_url <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> os.path.join(BASE_URL, game_id, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'sgf'</span>)</span>
<span id="cb4-7"></span>
<span id="cb4-8">r <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> requests.get(request_url)</span>
<span id="cb4-9"></span>
<span id="cb4-10"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(r)</span>
<span id="cb4-11"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(r.url, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span>)</span>
<span id="cb4-12"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(r.content.decode(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'utf-8'</span>))</span></code></pre></div>
<pre><code>&lt;Response [200]&gt;
https://online-go.com/api/v1/games/68984609/sgf

(;FF[4]
CA[UTF-8]
GM[1]
DT[2024-10-26]
PC[OGS: https://online-go.com/game/68984609]
GN[Friendly Match]
PB[8675threeohnine]
PW[n_sweep]
BR[25k]
WR[18k]
TM[604800]OT[7x604800 byo-yomi]
RE[?]
SZ[13]
KM[6.5]
RU[Japanese]
C[Game chats will be available in SGF downloads once the game has finished.
]
;B[if]
(;W[eh]
(;B[hj]
(;W[gd]
(;B[df]
(;W[dd]
))))))</code></pre>
<p>A few observations:</p>
<ul>
<li>the nested parentheses are an interesting choice</li>
<li>moves appear to come at the end, separated by semicolons</li>
<li>before the moves comes metadata about the game</li>
<li>each piece of data is preceded by a 1- or 2-letter code</li>
</ul>
<p>First, let’s parse this out into a more workable data structure. I want a dictionary for all of the metadata, and then a list of moves. With the <code>re</code> library, we can extract all the metadata with <a href="https://regexlicensing.org/">regular expressions</a> and then the list of moves are a simple split:</p>
<div class="sourceCode" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode py code-with-copy"><code class="sourceCode python"><span id="cb6-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> re</span>
<span id="cb6-2"></span>
<span id="cb6-3">sgf <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> r.content.decode(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'utf-8'</span>)</span>
<span id="cb6-4">text <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> sgf.strip(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">')'</span>).split(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">';'</span>)</span>
<span id="cb6-5">meta <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">dict</span>(re.findall(<span class="vs" style="color: #20794D;
background-color: null;
font-style: inherit;">r'(\w+)\[(.*?)\]\n?'</span>, text[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]))</span>
<span id="cb6-6">moves <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">tuple</span>(m.strip(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">()]'</span>).split(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'['</span>)) <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> m <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> text[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>:]]</span>
<span id="cb6-7"></span>
<span id="cb6-8"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(meta)</span>
<span id="cb6-9"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(moves)</span></code></pre></div>
<pre><code># metadata
{'FF': '4',
 'CA': 'UTF-8',
 'GM': '1',
 'DT': '2024-10-26',
 'PC': 'OGS: https://online-go.com/game/68984609',
 'GN': 'Friendly Match',
 'PB': '8675threeohnine',
 'PW': 'n_sweep',
 'BR': '25k',
 'WR': '18k',
 'TM': '604800',
 'OT': '7x604800 byo-yomi',
 'RE': '?',
 'SZ': '13',
 'KM': '6.5',
 'RU': 'Japanese'}

# moves
[('B', 'if'), ('W', 'eh'), ('B', 'hj'), ('W', 'gd'), ('B', 'df'), ('W', 'dd')]</code></pre>
<section id="a-quick-tangent" class="level3">
<h3 class="anchored" data-anchor-id="a-quick-tangent">A Quick Tangent</h3>
<p>I want my program to have a human-readable index for these codes. A bit of searching around the aforementioned SGF documentation page yielded a <a href="https://www.red-bean.com/sgf/proplist_ff.html">property index</a> consisting of some fixed width text including an ID field (letter codes) and a Description field for each code. Let’s scrape it!</p>
<p>This is a webpage rather than an API, which means this response will contain HTML data rather than JSON or plain text. With the help of <a href="https://beautiful-soup-4.readthedocs.io/en/latest/">Beautiful Soup</a>, two quick lines parse the fixed width table into a list of strings:</p>
<div class="sourceCode" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode py code-with-copy"><code class="sourceCode python"><span id="cb8-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> bs4 <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> BeautifulSoup <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> bs</span>
<span id="cb8-2"></span>
<span id="cb8-3">r <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> requests.get(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'https://www.red-bean.com/sgf/proplist_ff.html'</span>)</span>
<span id="cb8-4">soup <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> bs(r.content, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'html.parser'</span>)</span>
<span id="cb8-5">lines <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> soup.find(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'pre'</span>).text.strip().split(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span>)</span>
<span id="cb8-6"></span>
<span id="cb8-7"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Total lines:'</span>, <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(lines), <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span>)</span>
<span id="cb8-8"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(lines[:<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>])  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># show the first ten lines</span></span></code></pre></div>
<pre><code>Total lines: 91

['ID   FF   Description     property type    property value',
 '--  ----  --------------  ---------------  ---------------------------------',
 'AB  1234  Add Black       setup            list of stone',
 'AE  1234  Add Empty       setup            list of point',
 'AN  --34  Annotation      game-info        simpletext',
 'AP  ---4  Application     root             composed simpletext : simpletext',
 'AR  ---4  Arrow           -                list of composed point : point',
 'AS  ---4  Who adds stones - (LOA)          simpletext',
 'AW  1234  Add White       setup            list of stone',
 'B   1234  Black           move             move']</code></pre>
<p>I want to remove that second line that just has dashes, but it actually contains some useful information: the maximum number of characters present in each column…</p>
<p><a href="https://www.youtube.com/watch?v=e3JUD4RXj7c&amp;t=0s">Or does it?</a></p>
<p>While writing this section, I noticed that the 8th line in the above output, <code>Who adds stones</code>, goes one letter beyond the dashes in its header. Revisiting the page I’m scraping, there is even an instance where a description goes beyond the start of the next column, making this much less feasible to parse automatically.</p>
<p><img src="https://n-sweep.github.io/posts/2024-10-28-go-in-python-2/images/index_issues.png"></p>
<p>I did not really end up requiring this in the project (yet), so I’ll collapse the unused code below for the curious and move on from the subject.</p>
<div class="callout callout-style-default callout-note callout-titled">
<div class="callout-header d-flex align-content-center" data-bs-toggle="collapse" data-bs-target=".callout-1-contents" aria-controls="callout-1" aria-expanded="false" aria-label="Toggle callout">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Unused SGF Scraping Code
</div>
<div class="callout-btn-toggle d-inline-block border-0 py-1 ps-1 pe-0 float-end"><i class="callout-toggle"></i></div>
</div>
<div id="callout-1" class="callout-1-contents callout-collapse collapse">
<div class="callout-body-container callout-body">
<div class="sourceCode" id="cb10" style="background: #f1f3f5;"><pre class="sourceCode py code-with-copy"><code class="sourceCode python"><span id="cb10-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> itertools <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> accumulate</span>
<span id="cb10-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> bs4 <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> BeautifulSoup <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> bs</span>
<span id="cb10-3"></span>
<span id="cb10-4"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> sgf_data() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">dict</span>:</span>
<span id="cb10-5">    r <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> requests.get(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'https://www.red-bean.com/sgf/proplist_ff.html'</span>)</span>
<span id="cb10-6">    soup <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> bs(r.content, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'html.parser'</span>)</span>
<span id="cb10-7">    lines <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> soup.find(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'pre'</span>).text.strip().split(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span>)  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># pyright: ignore</span></span>
<span id="cb10-8">    field_lengths <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(d) <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> d <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> lines.pop(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>).split(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">' '</span>) <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> d]</span>
<span id="cb10-9"></span>
<span id="cb10-10">    coords <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">list</span>(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">zip</span>(</span>
<span id="cb10-11">        accumulate(field_lengths, <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">lambda</span> a, v: a <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> v <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, initial<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>),</span>
<span id="cb10-12">        field_lengths</span>
<span id="cb10-13">    ))</span>
<span id="cb10-14"></span>
<span id="cb10-15">    processed_lines <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">list</span>(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">map</span>(<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">lambda</span> ln: [ln[x:x<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span>l].strip() <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> x, l <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> coords], lines))</span>
<span id="cb10-16">    keys <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [field.lower().replace(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">' '</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'_'</span>) <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> field <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> processed_lines.pop(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>)]</span>
<span id="cb10-17"></span>
<span id="cb10-18">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> {ln[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>]: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">dict</span>(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">zip</span>(keys[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>:], ln[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>:])) <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> ln <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> processed_lines}</span></code></pre></div>
</div>
</div>
</div>
</section>
</section>
<section id="thats-it-actually" class="level2">
<h2 class="anchored" data-anchor-id="thats-it-actually">That’s It, Actually!</h2>
<p>We have all the data we need from the API! This is a shorter post (or at least it has less code), but this step took up a disproportionate amount of time in this project, the opening ‘Documentation Important’ section especially. This was one of two times I almost shelved this project; the second also took up a disproportionate amount of time and I expect to talk more about it in part 4.</p>
</section>
</section>
<section id="one-more-thing" class="level1">
<h1>One More Thing</h1>
<p>In <a href="https://sweep.sh/posts/2024-10-24-go-in-python-1/">part 1</a> we built a game board, now we have a list of moves. Let’s put them together before we wrap it up for the day. Remember that, with our Board class, we can make plays with the user number, and an x and y location on the board:</p>
<div class="sourceCode" id="cb11" style="background: #f1f3f5;"><pre class="sourceCode py code-with-copy"><code class="sourceCode python"><span id="cb11-1">b <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Board(size)</span>
<span id="cb11-2">b.play(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>)</span>
<span id="cb11-3">b.play(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)</span></code></pre></div>
<p>And we’ve already parsed our SGF moves into a list:</p>
<pre><code>[('B', 'if'), ('W', 'eh'), ('B', 'hj'), ('W', 'gd'), ('B', 'df'), ('W', 'dd')]</code></pre>
<p>So let’s make that data compatible with the expected input to <code>Board.play()</code>:</p>
<div class="sourceCode" id="cb13" style="background: #f1f3f5;"><pre class="sourceCode py code-with-copy"><code class="sourceCode python"><span id="cb13-1">ALPHA <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'abcdefghijklmnopqrstuvwxyz'</span></span>
<span id="cb13-2"></span>
<span id="cb13-3">b <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Board(size)  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># the Board class comes from Part 1</span></span>
<span id="cb13-4"></span>
<span id="cb13-5"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> player, move <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> moves:</span>
<span id="cb13-6">    player_num <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'BW'</span>.index(player) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb13-7"></span>
<span id="cb13-8">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> move:  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># an empty move is a pass</span></span>
<span id="cb13-9">        x, y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> (ALPHA.index(c) <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> c <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> move)</span>
<span id="cb13-10">        b.play(player_num, x, y)</span>
<span id="cb13-11"></span>
<span id="cb13-12"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(b)</span></code></pre></div>
<figure class="figure">
<img src="https://n-sweep.github.io/posts/2024-10-28-go-in-python-2/images/first_sgf_example.png" height="300" class="figure-img"> <img src="https://n-sweep.github.io/posts/2024-10-28-go-in-python-2/images/first_sgf_example_ogs.png" height="300" class="figure-img">
<figcaption>
<i>Program output (left), Current game on OGS (right)</i>
</figcaption>
</figure>
<p>Nice.</p>
</section>
<section id="next-time-part-3-game-engine-pt-2-neighbors-groups" class="level1">
<h1>Next Time: Part 3: Game Engine, Pt 2: Neighbors &amp; Groups</h1>
<p>Next time we’ll revisit the game engine, highlight a pretty egregious bug in the game logic, and talk a little bit about depth-first search algorithms. Or maybe it’s breadth-first.</p>
<p>Until then!</p>
<p><a href="">This will be a link to part 3</a></p>


</section>

<p><br><br>This page lovingly generated by <a href="https://quarto.org/">Quarto</a> ❤️</p> ]]></description>
  <category>go</category>
  <category>baduk</category>
  <category>python</category>
  <category>programming</category>
  <guid>https://n-sweep.github.io/posts/2024-10-28-go-in-python-2/</guid>
  <pubDate>Mon, 28 Oct 2024 04:00:00 GMT</pubDate>
</item>
<item>
  <title>Go in Python, Part 1</title>
  <dc:creator>n sweep</dc:creator>
  <link>https://n-sweep.github.io/posts/2024-10-24-go-in-python-1/</link>
  <description><![CDATA[ 





<p>A few months ago I started playing <a href="https://en.wikipedia.org/wiki/Go_(game)">Go</a> and became a fast fan of the game. I and a few friends I have roped into learning with me have been playing on <a href="https://online-go.com">online-go.com (OGS)</a>, both via their website and a third party Android app called <a href="https://play.google.com/store/apps/details?id=io.zenandroid.onlinego&amp;hl=en_US">Sente</a>. As with every new website I find remotely useful, I had to check if they have an <a href="https://en.wikipedia.org/wiki/Web_API">API</a>.</p>
<p>Spoiler: they do.</p>
<figure class="figure">
<a href="https://en.wikipedia.org/wiki/Go_(game)#"><img src="https://n-sweep.github.io/posts/2024-10-24-go-in-python-1/images/Zhou_Wenju_Palace_Museum_Detail_of_Go_Players.jpg" width="600px" class="figure-img"></a>
<figcaption>
<i>Li Jing playing Go with his brothers. Detail from a painting by Zhou Wenju (fl.&nbsp;942–961 CE), Southern Tang dynasty. [Wikipedia]</i>
</figcaption>
</figure>
<p>My goal is to make a program that, given the link to or ID of a game on OGS, will produce an animated gif of the game. Comfortable in my knowledge that OGS has an API and <a href="https://github.com/charmbracelet/vhs">charmbracelet/vhs</a> exists, I chose to start with the game engine. This could be later categorized as a mistake.</p>
<section id="game-engine" class="level1">
<h1>Game Engine</h1>
<p>As I intend to use <a href="https://github.com/charmbracelet/vhs">charmbracelet/vhs</a> to generate the gif, my first concern was whether I can represent a Go board in a nice way in the terminal. The game pieces in Go are black and white stones and I already know I want to use emoji (⚫⚪) to represent them. There are plenty of <a href="https://symbl.cc/en/unicode/blocks/box-drawing/">Unicode characters</a> for drawing boxes and grids, but the trouble is that emoji are roughly two characters wide in monospace fonts. With this limitation, a grid of intersecting lines was impossible, but I eventually came up with the following ASCII board:</p>
<pre><code>   A B C D E F G H J K L M N O P Q R S T
19 ╶╴╶╴╶╴╶╴╶╴╶╴╶╴╶╴╶╴╶╴╶╴╶╴╶╴╶╴╶╴╶╴╶╴╶╴╶╴ 19
18 ╶╴╶╴╶╴╶╴╶╴╶╴╶╴╶╴╶╴╶╴╶╴╶╴╶╴╶╴╶╴╶╴╶╴╶╴╶╴ 18
17 ╶╴╶╴╶╴╶╴╶╴╶╴╶╴╶╴╶╴╶╴╶╴╶╴╶╴╶╴╶╴╶╴╶╴╶╴╶╴ 17
16 ╶╴╶╴╶╴╺╸╶╴╶╴╶╴╶╴╶╴╺╸╶╴╶╴╶╴╶╴╶╴╺╸╶╴╶╴╶╴ 16
15 ╶╴╶╴╶╴╶╴╶╴╶╴╶╴╶╴╶╴╶╴╶╴╶╴╶╴╶╴╶╴╶╴╶╴╶╴╶╴ 15
14 ╶╴╶╴╶╴╶╴╶╴╶╴╶╴╶╴╶╴╶╴╶╴╶╴╶╴╶╴╶╴╶╴╶╴╶╴╶╴ 14
13 ╶╴╶╴╶╴╶╴╶╴╶╴╶╴╶╴╶╴╶╴╶╴╶╴╶╴╶╴╶╴╶╴╶╴╶╴╶╴ 13
12 ╶╴╶╴╶╴╶╴╶╴╶╴╶╴╶╴╶╴╶╴╶╴╶╴╶╴╶╴╶╴╶╴╶╴╶╴╶╴ 12
11 ╶╴╶╴╶╴╶╴╶╴╶╴╶╴╶╴╶╴╶╴╶╴╶╴╶╴╶╴╶╴╶╴╶╴╶╴╶╴ 11
10 ╶╴╶╴╶╴╺╸╶╴╶╴╶╴╶╴╶╴╺╸╶╴╶╴╶╴╶╴╶╴╺╸╶╴╶╴╶╴ 10
 9 ╶╴╶╴╶╴╶╴╶╴╶╴╶╴╶╴╶╴╶╴╶╴╶╴╶╴╶╴╶╴╶╴╶╴╶╴╶╴ 9
 8 ╶╴╶╴╶╴╶╴╶╴╶╴╶╴╶╴╶╴╶╴╶╴╶╴╶╴╶╴╶╴╶╴╶╴╶╴╶╴ 8
 7 ╶╴╶╴╶╴╶╴╶╴╶╴╶╴╶╴╶╴╶╴╶╴╶╴╶╴╶╴╶╴╶╴╶╴╶╴╶╴ 7
 6 ╶╴╶╴╶╴╶╴╶╴╶╴╶╴╶╴╶╴╶╴╶╴╶╴╶╴╶╴╶╴╶╴╶╴╶╴╶╴ 6
 5 ╶╴╶╴╶╴╶╴╶╴╶╴╶╴╶╴╶╴╶╴╶╴╶╴╶╴╶╴╶╴╶╴╶╴╶╴╶╴ 5
 4 ╶╴╶╴╶╴╺╸╶╴╶╴╶╴╶╴╶╴╺╸╶╴╶╴╶╴╶╴╶╴╺╸╶╴╶╴╶╴ 4
 3 ╶╴╶╴╶╴╶╴╶╴╶╴╶╴╶╴╶╴╶╴╶╴╶╴╶╴╶╴╶╴╶╴╶╴╶╴╶╴ 3
 2 ╶╴╶╴╶╴╶╴╶╴╶╴╶╴╶╴╶╴╶╴╶╴╶╴╶╴╶╴╶╴╶╴╶╴╶╴╶╴ 2
 1 ╶╴╶╴╶╴╶╴╶╴╶╴╶╴╶╴╶╴╶╴╶╴╶╴╶╴╶╴╶╴╶╴╶╴╶╴╶╴ 1
   A B C D E F G H J K L M N O P Q R S T</code></pre>
<p>Note: This board mimics the default board display on OGS, which omits the letter I from the legend.</p>
<section id="representing-the-board" class="level2">
<h2 class="anchored" data-anchor-id="representing-the-board">Representing the Board</h2>
<p>Considering that the board is simply a 2d array, <code>numpy</code> is the perfect choice for representing the game’s state. Zeros are empty spaces, ones will be black stones, and twos will be white stones. Let’s start with some constants and a board.</p>
<div class="sourceCode" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode py code-with-copy"><code class="sourceCode python"><span id="cb2-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> numpy <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> np</span>
<span id="cb2-2"></span>
<span id="cb2-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># let's start with a 9x9 board for the sake of brevity</span></span>
<span id="cb2-4">size <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">9</span></span>
<span id="cb2-5">state <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.zeros((size,size), dtype<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>)</span>
<span id="cb2-6">state[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb2-7">state[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span></span>
<span id="cb2-8"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(state)</span></code></pre></div>
<pre><code>array([[0, 0, 0, 0, 0, 0, 0, 0, 0],
       [0, 0, 0, 0, 0, 0, 0, 0, 0],
       [0, 0, 0, 2, 0, 0, 0, 0, 0],
       [0, 0, 0, 0, 0, 0, 0, 0, 0],
       [0, 0, 0, 0, 1, 0, 0, 0, 0],
       [0, 0, 0, 0, 0, 0, 0, 0, 0],
       [0, 0, 0, 0, 0, 0, 0, 0, 0],
       [0, 0, 0, 0, 0, 0, 0, 0, 0],
       [0, 0, 0, 0, 0, 0, 0, 0, 0]])</code></pre>
<section id="game-pieces-intersections" class="level3">
<h3 class="anchored" data-anchor-id="game-pieces-intersections">Game Pieces &amp; Intersections</h3>
<p>Now we can loop over the game state to make a friendlier render of the game. Default monospace fonts in browsers are often a bit tall and narrow - if this looks a little awkward, there are screenshots coming up.</p>
<div class="sourceCode" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode py code-with-copy"><code class="sourceCode python"><span id="cb4-1">B <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"⚫"</span></span>
<span id="cb4-2">W <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"⚪"</span></span>
<span id="cb4-3">PT <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"╶╴"</span></span>
<span id="cb4-4"></span>
<span id="cb4-5"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> row <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> state:</span>
<span id="cb4-6">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">''</span>.join([(PT,B,W)[i] <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> i <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> row]))</span></code></pre></div>
<pre><code>╶╴╶╴╶╴╶╴╶╴╶╴╶╴╶╴╶╴
╶╴╶╴╶╴╶╴╶╴╶╴╶╴╶╴╶╴
╶╴╶╴╶╴⚪╶╴╶╴╶╴╶╴╶╴
╶╴╶╴╶╴╶╴╶╴╶╴╶╴╶╴╶╴
╶╴╶╴╶╴╶╴⚫╶╴╶╴╶╴╶╴
╶╴╶╴╶╴╶╴╶╴╶╴╶╴╶╴╶╴
╶╴╶╴╶╴╶╴╶╴╶╴╶╴╶╴╶╴
╶╴╶╴╶╴╶╴╶╴╶╴╶╴╶╴╶╴
╶╴╶╴╶╴╶╴╶╴╶╴╶╴╶╴╶╴</code></pre>
</section>
<section id="adding-star-points-to-the-board" class="level3">
<h3 class="anchored" data-anchor-id="adding-star-points-to-the-board">Adding Star Points to the Board</h3>
<p>Star points have no value or significance in Go, they are simply there to orient ourselves on the board. It just doesn’t look quite right without them though.</p>
<p>I wrote this in a fever dream. Through liberal use of the walrus operator, we set the location of each star point to a -1. By creating an array the same size as our game board, we’ll be able to combine them.</p>
<p>To be more specific, <code>corners</code> calculates the spacing between star points based on the size of the board (13 and 19 size boards have the same spacing), then we use <code>product()</code> to give us every combination of appropriate points on the board, adding in the middle point manually.</p>
<div class="sourceCode" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode py code-with-copy"><code class="sourceCode python"><span id="cb6-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> itertools <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> product</span>
<span id="cb6-2"></span>
<span id="cb6-3">star_points <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.zeros((size,size), dtype<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>)</span>
<span id="cb6-4">corners <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [j <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> i <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>) <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> (j<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:=</span>((s<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span>(size<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">9</span>))<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>s<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>i))) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> size]</span>
<span id="cb6-5">pts <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [(f<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:=</span>size<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, f)] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">list</span>(product(corners, repeat<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>))</span>
<span id="cb6-6">star_points[<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">zip</span>(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>pts)] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb6-7"></span>
<span id="cb6-8"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(star_points)</span></code></pre></div>
<p>Why -1? The way things are written so far, a 3 would also work. I wanted the ability to get all stones on the board by filtering the state for any positions that are greater than zero, however I inadvertently skirted this problem by only applying the star points to the board directly before printing and the -1 stuck around.</p>
<pre><code>array([[ 0,  0,  0,  0,  0,  0,  0,  0,  0],
       [ 0,  0,  0,  0,  0,  0,  0,  0,  0],
       [ 0,  0, -1,  0,  0,  0, -1,  0,  0],
       [ 0,  0,  0,  0,  0,  0,  0,  0,  0],
       [ 0,  0,  0,  0, -1,  0,  0,  0,  0],
       [ 0,  0,  0,  0,  0,  0,  0,  0,  0],
       [ 0,  0, -1,  0,  0,  0, -1,  0,  0],
       [ 0,  0,  0,  0,  0,  0,  0,  0,  0],
       [ 0,  0,  0,  0,  0,  0,  0,  0,  0]])</code></pre>
<p>“Masking” is a useful technique where we create an array of boolean values of the same <code>shape</code> as an array of data. The array of booleans, or ‘mask’, can then be applied to the array of data by indexing: <code>data[mask]</code>. This allows us to return or affect only the values that align with <code>True</code> values in the mask.</p>
<p>By masking out the game pieces that have already been played (any points that are not 0), we can assign the star points to the game board only if a piece hasn’t already been played in that position.</p>
<div class="sourceCode" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode py code-with-copy"><code class="sourceCode python"><span id="cb8-1">SP <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"╺╸"</span></span>
<span id="cb8-2"></span>
<span id="cb8-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># make a copy before applying the star points; we don't want our game state to</span></span>
<span id="cb8-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># contain anything other than zeros, ones, and twos</span></span>
<span id="cb8-5">board <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> state.copy()</span>
<span id="cb8-6">mask <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span>state.astype(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">bool</span>)</span>
<span id="cb8-7">board[mask] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> star_points[mask]</span>
<span id="cb8-8"></span>
<span id="cb8-9"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> row <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> board:</span>
<span id="cb8-10">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">''</span>.join([(PT,B,W,SP)[i] <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> i <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> row]))</span></code></pre></div>
<pre><code>╶╴╶╴╶╴╶╴╶╴╶╴╶╴╶╴╶╴
╶╴╶╴╶╴╶╴╶╴╶╴╶╴╶╴╶╴
╶╴╶╴╺╸⚪╶╴╶╴╺╸╶╴╶╴
╶╴╶╴╶╴╶╴╶╴╶╴╶╴╶╴╶╴
╶╴╶╴╶╴╶╴⚫╶╴╶╴╶╴╶╴
╶╴╶╴╶╴╶╴╶╴╶╴╶╴╶╴╶╴
╶╴╶╴╺╸╶╴╶╴╶╴╺╸╶╴╶╴
╶╴╶╴╶╴╶╴╶╴╶╴╶╴╶╴╶╴
╶╴╶╴╶╴╶╴╶╴╶╴╶╴╶╴╶╴</code></pre>
</section>
<section id="labelling-the-rows-columns" class="level3">
<h3 class="anchored" data-anchor-id="labelling-the-rows-columns">Labelling the Rows &amp; Columns</h3>
<p>Next up are row and column labels. As mentioned above, OGS skips the letter I, so I am doing the same.</p>
<div class="sourceCode" id="cb10" style="background: #f1f3f5;"><pre class="sourceCode py code-with-copy"><code class="sourceCode python"><span id="cb10-1">ALPHA <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'abcdefghijklmnopqrstuvwxyz'</span></span>
<span id="cb10-2"></span>
<span id="cb10-3">joined <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">' '</span>.join(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">list</span>(ALPHA.replace(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'i'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">''</span>)[:size])).upper()</span>
<span id="cb10-4">rows <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [col_label<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:=</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>(d<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">' '</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> s)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}{</span>joined<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;"> </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>d<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>]</span>
<span id="cb10-5"></span>
<span id="cb10-6"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> r, input_row <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">enumerate</span>(board, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>):</span>
<span id="cb10-7">    row <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">''</span>.join([(PT,B,W,SP)[i] <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> i <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> input_row])</span>
<span id="cb10-8">    num <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>(size <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> r <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb10-9">    lnum <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> num.rjust(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>(size))))</span>
<span id="cb10-10">    rnum <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> num.ljust(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>(size))))</span>
<span id="cb10-11">    rows.append(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f'</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>lnum<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;"> </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>row<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;"> </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>rnum<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span>)</span>
<span id="cb10-12"></span>
<span id="cb10-13">rows.append(col_label)</span>
<span id="cb10-14"></span>
<span id="cb10-15"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span>.join(rows))</span></code></pre></div>
<pre><code>--A B C D E F G H J --
9 ╶╴╶╴╶╴╶╴╶╴╶╴╶╴╶╴╶╴ 9
8 ╶╴╶╴╶╴╶╴╶╴╶╴╶╴╶╴╶╴ 8
7 ╶╴╶╴╺╸⚪╶╴╶╴╺╸╶╴╶╴ 7
6 ╶╴╶╴╶╴╶╴╶╴╶╴╶╴╶╴╶╴ 6
5 ╶╴╶╴╶╴╶╴⚫╶╴╶╴╶╴╶╴ 5
4 ╶╴╶╴╶╴╶╴╶╴╶╴╶╴╶╴╶╴ 4
3 ╶╴╶╴╺╸╶╴╶╴╶╴╺╸╶╴╶╴ 3
2 ╶╴╶╴╶╴╶╴╶╴╶╴╶╴╶╴╶╴ 2
1 ╶╴╶╴╶╴╶╴╶╴╶╴╶╴╶╴╶╴ 1
--A B C D E F G H J --</code></pre>
</section>
<section id="a-coat-of-paint" class="level3">
<h3 class="anchored" data-anchor-id="a-coat-of-paint">A Coat of Paint</h3>
<p>Let’s add some <a href="https://en.wikipedia.org/wiki/ANSI_escape_code#Colors">ANSI color escape codes</a> to the mix to give our board that realistic wooden effect.</p>
<div class="sourceCode" id="cb12" style="background: #f1f3f5;"><pre class="sourceCode py code-with-copy"><code class="sourceCode python"><span id="cb12-1">BLACK <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\033</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">[30m'</span></span>
<span id="cb12-2">GRAY <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\033</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">[90m'</span></span>
<span id="cb12-3">YELLOW <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\033</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">[33m'</span></span>
<span id="cb12-4">BG_YELLOW <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\033</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">[43m'</span></span>
<span id="cb12-5">RESET <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\033</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">[0m'</span></span>
<span id="cb12-6"></span>
<span id="cb12-7"></span>
<span id="cb12-8">joined <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">' '</span>.join(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">list</span>(ALPHA.replace(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'i'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">''</span>)[:size])).upper()</span>
<span id="cb12-9">rows <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [col_label<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:=</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>YELLOW<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}{</span>(d<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">' '</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> s)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}{</span>BLACK<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}{</span>joined<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;"> </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>YELLOW<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}{</span>d<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>]</span>
<span id="cb12-10"></span>
<span id="cb12-11"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> r, input_row <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">enumerate</span>(board, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>):</span>
<span id="cb12-12">    row <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">''</span>.join([(PT,B,W,SP)[i] <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> i <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> input_row])</span>
<span id="cb12-13">    num <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>(size <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> r <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb12-14">    lnum <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> num.rjust(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>(size))))</span>
<span id="cb12-15">    rnum <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> num.ljust(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>(size))))</span>
<span id="cb12-16">    rows.append(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f'</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>BLACK<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}{</span>lnum<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;"> </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>GRAY<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}{</span>row<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;"> </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>BLACK<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}{</span>rnum<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span>)</span>
<span id="cb12-17"></span>
<span id="cb12-18">rows.append(col_label)</span>
<span id="cb12-19">rows <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f'</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>BG_YELLOW<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}{</span>row<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}{</span>RESET<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> row <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> rows]</span>
<span id="cb12-20"></span>
<span id="cb12-21"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span>.join(rows))</span></code></pre></div>
<p>Markdown doesn’t render color escape codes, so here’s a screenshot!</p>
<p><img src="https://n-sweep.github.io/posts/2024-10-24-go-in-python-1/images/9x9.png"></p>
</section>
</section>
<section id="wrap-it-up" class="level2">
<h2 class="anchored" data-anchor-id="wrap-it-up">Wrap It Up</h2>
<p>Now let’s package that all together in a class to make it easier to play a stone.</p>
<div class="sourceCode" id="cb13" style="background: #f1f3f5;"><pre class="sourceCode py code-with-copy"><code class="sourceCode python"><span id="cb13-1">ALPHA <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'abcdefghijklmnopqrstuvwxyz'</span></span>
<span id="cb13-2">B <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"⚫"</span></span>
<span id="cb13-3">W <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"⚪"</span></span>
<span id="cb13-4">PT <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"╶╴"</span></span>
<span id="cb13-5">SP <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"╺╸"</span></span>
<span id="cb13-6"></span>
<span id="cb13-7">BLACK <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\033</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">[30m'</span></span>
<span id="cb13-8">GRAY <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\033</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">[90m'</span></span>
<span id="cb13-9">YELLOW <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\033</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">[33m'</span></span>
<span id="cb13-10">BG_YELLOW <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\033</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">[43m'</span></span>
<span id="cb13-11">RESET <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\033</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">[0m'</span></span>
<span id="cb13-12"></span>
<span id="cb13-13"></span>
<span id="cb13-14"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">class</span> Board:</span>
<span id="cb13-15">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">__init__</span>(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>, size: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">19</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span>:</span>
<span id="cb13-16">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.size <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> size</span>
<span id="cb13-17">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.state <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.zeros((size,size), dtype<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>)</span>
<span id="cb13-18"></span>
<span id="cb13-19">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> play(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>, player: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>, x: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>, y: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span>:</span>
<span id="cb13-20">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.state[y][x] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> player</span>
<span id="cb13-21"></span>
<span id="cb13-22">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> plaintext_board(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>:</span>
<span id="cb13-23">        star_points <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.zeros((<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.size,<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.size), dtype<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>)</span>
<span id="cb13-24">        corners <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [j <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> i <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>) <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> (j<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:=</span>((s<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span>(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.size<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">9</span>))<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>s<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>i))) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.size]</span>
<span id="cb13-25">        pts <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [(f<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.size<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, f)] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">list</span>(product(corners, repeat<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>))</span>
<span id="cb13-26">        star_points[<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">zip</span>(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>pts)] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb13-27"></span>
<span id="cb13-28">        board <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.state.copy()</span>
<span id="cb13-29">        mask <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.state.astype(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">bool</span>)</span>
<span id="cb13-30">        board[mask] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> star_points[mask]</span>
<span id="cb13-31"></span>
<span id="cb13-32">        joined <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">' '</span>.join(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">list</span>(ALPHA.replace(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'i'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">''</span>)[:<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.size])).upper()</span>
<span id="cb13-33">        rows <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [col_label<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:=</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>YELLOW<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}{</span>(d<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'-'</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> s)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}{</span>BLACK<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}{</span>joined<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;"> </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>YELLOW<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}{</span>d<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>]</span>
<span id="cb13-34"></span>
<span id="cb13-35">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> r, input_row <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">enumerate</span>(board, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>):</span>
<span id="cb13-36">            row <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">''</span>.join([(PT,B,W,SP)[i] <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> i <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> input_row])</span>
<span id="cb13-37">            num <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.size <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> r <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb13-38">            lnum <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> num.rjust(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.size))))</span>
<span id="cb13-39">            rnum <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> num.ljust(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.size))))</span>
<span id="cb13-40">            rows.append(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f'</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>BLACK<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}{</span>lnum<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;"> </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>GRAY<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}{</span>row<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;"> </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>BLACK<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}{</span>rnum<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span>)</span>
<span id="cb13-41"></span>
<span id="cb13-42">        rows.append(col_label)</span>
<span id="cb13-43">        rows <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f'</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>BG_YELLOW<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}{</span>row<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}{</span>RESET<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> row <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> rows]</span>
<span id="cb13-44"></span>
<span id="cb13-45">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span>.join(rows)</span>
<span id="cb13-46"></span>
<span id="cb13-47">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">__str__</span>(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>:</span>
<span id="cb13-48">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.plaintext_board()</span></code></pre></div>
<section id="the-.__str__-method" class="level3">
<h3 class="anchored" data-anchor-id="the-.__str__-method">The <code>.__str__()</code> method</h3>
<p>Python class method surrounded in double underscores are called “magic methods” or “dunder methods”. <code>.__init__()</code> is also an example. <a href="https://duckduckgo.com/?q=python+magic+methods">Read more about them</a>.</p>
<p>tl;dr, the <a href="https://docs.python.org/3/reference/datamodel.html#object.__str__"><code>__str__()</code> method</a> determines what gets sent to the console when an instance of the class is given as an argument to <code>print()</code>, allowing us to simply print a board like so:</p>
<div class="sourceCode" id="cb14" style="background: #f1f3f5;"><pre class="sourceCode py code-with-copy"><code class="sourceCode python"><span id="cb14-1">b <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Board(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">9</span>)</span>
<span id="cb14-2"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(b)</span></code></pre></div>
</section>
<section id="the-.play-method" class="level3">
<h3 class="anchored" data-anchor-id="the-.play-method">The <code>.play()</code> method</h3>
<p>We’ve swapped <code>x</code> and <code>y</code> in the input arguments to be more intuitive. All we have to do is add a player number (1 for black, 2 for white) to the game’s state and the appropriate pieces will be rendered on print.</p>
<div class="sourceCode" id="cb15" style="background: #f1f3f5;"><pre class="sourceCode py code-with-copy"><code class="sourceCode python"><span id="cb15-1">    ...</span>
<span id="cb15-2">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> play(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>, player: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>, x: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>, y: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span>:</span>
<span id="cb15-3">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.state[y, x] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> player</span>
<span id="cb15-4">    ...</span></code></pre></div>
</section>
</section>
<section id="quick-test-drive" class="level2">
<h2 class="anchored" data-anchor-id="quick-test-drive">Quick Test Drive</h2>
<p>Testing the <code>play</code> method on a board of each size:</p>
<div class="sourceCode" id="cb16" style="background: #f1f3f5;"><pre class="sourceCode py code-with-copy"><code class="sourceCode python"><span id="cb16-1"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> size <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> [<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">9</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">13</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">19</span>]:</span>
<span id="cb16-2">    b <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Board(size)</span>
<span id="cb16-3">    b.play(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>)</span>
<span id="cb16-4">    b.play(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)</span>
<span id="cb16-5">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(b)</span></code></pre></div>
<p><img src="https://n-sweep.github.io/posts/2024-10-24-go-in-python-1/images/all_3.png"></p>
<p>Nice.</p>
</section>
</section>
<section id="next-time-api-headaches" class="level1">
<h1>Next Time: API Headaches</h1>
<p>While there is more to do with regard to the game engine, it would be great to have a list of plays to loop over with our new <code>Board</code> class, and that’s exactly what the OGS API returns. Next up, we’ll talk about the first time I almost gave up on this project, and also a lot of documentation.</p>
<p>Until then!</p>
<p><a href="../../posts/2024-10-28-go-in-python-2/index.html">Read part 2</a></p>


</section>

<p><br><br>This page lovingly generated by <a href="https://quarto.org/">Quarto</a> ❤️</p> ]]></description>
  <category>go</category>
  <category>baduk</category>
  <category>python</category>
  <category>programming</category>
  <guid>https://n-sweep.github.io/posts/2024-10-24-go-in-python-1/</guid>
  <pubDate>Thu, 24 Oct 2024 04:00:00 GMT</pubDate>
</item>
<item>
  <title>Copying My Voice to the Clipboard</title>
  <dc:creator>n sweep</dc:creator>
  <link>https://n-sweep.github.io/posts/2024-06-23-copying-my-voice-to-the-clipboard/</link>
  <description><![CDATA[ 





<p>Recently I was coaching a python programmer by way of text conversation on Discord. It was after a long day at work, my hands were feeling fatigued, and I thought to myself</p>
<blockquote class="blockquote">
<p>[I work from home, therefore] <em>I already have a microphone in front of my face, and <a href="https://en.wikipedia.org/wiki/Large_language_model">LLM</a>s exist. I bet <a href="https://en.wikipedia.org/wiki/Speech_recognition">STT</a> to the clipboard would be pretty easy…</em></p>
</blockquote>
<p>If I’ve ever heard famous last words, those are them, but it actually did turn out to be relatively easy.</p>
<p><img src="https://n-sweep.github.io/posts/2024-06-23-copying-my-voice-to-the-clipboard/images/fry_megaphone.gif"></p>
<p>The goal is not just to transcribe audio, but to have a script that will listen to me speak, transcribe the audio to text, and put that text into my system clipboard so I can easily paste it into an email, Slack message, etc…, with a single command.</p>
<section id="speech-to-text-transcription" class="level1">
<h1>Speech-to-Text Transcription</h1>
<p>First, I wanted to make sure the transcription step was actually as easy as I was assuming. A search for STT APIs brought me to <a href="https://deepgram.com/">Deepgram Voice Ai</a>, who offer a generous $200 credit to a new account. We’re good to go there, but we aren’t going to hit the API until we have some audio to transcribe…</p>
</section>
<section id="recording-my-voice-from-the-command-line" class="level1">
<h1>Recording My Voice (from the Command Line)</h1>
<p>As I was making the mistake of searching for Python libraries to record audio, it occurred to me that I already knew my system audio was being managed by <a href="https://www.freedesktop.org/wiki/Software/PulseAudio/">Pulse</a> and, for some unrelated reason lost to time, I had recently learned that I could play an audio file with the <code>pacat</code> command. There is probably a simple command for recording already available in the terminal. Let’s check out the man page for <code>pacat</code>:</p>
<p><img src="https://n-sweep.github.io/posts/2024-06-23-copying-my-voice-to-the-clipboard/images/pacat.gif" width="600"></p>
<p>Bingo - <code>pacat</code> also includes <code>parecord</code>, an alias for using the <code>-r</code> flag. A quick experiment showed no options were required to record from my default audio device:</p>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode sh code-with-copy"><code class="sourceCode bash"><span id="cb1-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">parecord</span> test.mp3   <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># record</span></span>
<span id="cb1-2"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">pacat</span> text.mp3      <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># playback</span></span></code></pre></div>
<p>The <code>parecord</code> command will run, continuing to record audio, until you interrupt it (with a <code>Ctrl+C</code> in this case). The audio is then rendered to the filepath provided (<code>test.mp3</code>).</p>
<p>Since API calls can be done with <code>curl</code> or <code>wget</code>, this means <em><strong>we can do the entire workflow in bash!</strong></em></p>
<section id="a-small-problem" class="level2">
<h2 class="anchored" data-anchor-id="a-small-problem">A Small Problem</h2>
<p>Listening back to the test file with <code>pacat</code>, only the audio which had been fully rendered at the time of the interrupt was retained, leaving off a few seconds at the end of the recording (a few words, unless you pause long enough before interrupting the command).</p>
<p>Ideally, the user should be able to signal to the program that they are done recording at any point after they finish talking. I am not a professional bash developer, and this problem took the majority of this project’s time. I ultimately ended up with this, and would love to know if there is a better way (aside from not using bash):</p>
<div class="sourceCode" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode sh code-with-copy"><code class="sourceCode bash"><span id="cb2-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># run the recording in a separate process</span></span>
<span id="cb2-2"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">parecord</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'test.mp3'</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">&amp;</span></span>
<span id="cb2-3"></span>
<span id="cb2-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># get the process ID of the previous command</span></span>
<span id="cb2-5"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">parec_pid</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$!</span></span>
<span id="cb2-6"></span>
<span id="cb2-7"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">while</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">:</span>  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># infinite loop</span></span>
<span id="cb2-8"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">do</span></span>
<span id="cb2-9">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># read keyboard input</span></span>
<span id="cb2-10">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">read</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-n</span> 1 <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">key</span></span>
<span id="cb2-11"></span>
<span id="cb2-12">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># if a q is seen...</span></span>
<span id="cb2-13">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">[</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$key</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"q"</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">]</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">;</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">then</span></span>
<span id="cb2-14">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># wait 2 seconds for the recording to render</span></span>
<span id="cb2-15">        <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sleep</span> 2s</span>
<span id="cb2-16"></span>
<span id="cb2-17">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># kill the recording process</span></span>
<span id="cb2-18">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">kill</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-SIGINT</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$parec_pid</span></span>
<span id="cb2-19"></span>
<span id="cb2-20">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># break the infinite while loop</span></span>
<span id="cb2-21">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">break</span></span>
<span id="cb2-22">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fi</span></span>
<span id="cb2-23"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">done</span></span></code></pre></div>
</section>
<section id="better-file-name-handling" class="level2">
<h2 class="anchored" data-anchor-id="better-file-name-handling">Better File Name Handling</h2>
<p>We need to get rid of the hardcoded <code>test.mp3</code> file name and either:</p>
<ol type="1">
<li>Let the user specify the filename OR</li>
<li>Name the file automatically with a smarter naming convention.</li>
</ol>
<div class="sourceCode" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode sh code-with-copy"><code class="sourceCode bash"><span id="cb3-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># make a directory in /tmp/ for holding our recordings</span></span>
<span id="cb3-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mkdir</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-p</span> /tmp/dictation</span>
<span id="cb3-3"></span>
<span id="cb3-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># if the user has provided an argument (filename)...</span></span>
<span id="cb3-5"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">[</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$#</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">-gt</span> 0 <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">]</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">;</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">then</span></span>
<span id="cb3-6">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># replace spaces with underscores and use input as filename</span></span>
<span id="cb3-7">    <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">filename</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$(</span><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">echo</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$@</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">|</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sed</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'s/ /_/g'</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb3-8"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span></span>
<span id="cb3-9">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># otherwise, use a timestamp as the filename</span></span>
<span id="cb3-10">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># with seconds included to avoid duplicate filenames</span></span>
<span id="cb3-11">    <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">filename</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$(</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">date</span> +%s<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb3-12"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fi</span></span>
<span id="cb3-13"></span>
<span id="cb3-14"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># set the final file location in our /tmp/dictation directory from earlier</span></span>
<span id="cb3-15"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">file_loc</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"/tmp/dictation/</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$filename</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">.mp3"</span></span></code></pre></div>
</section>
<section id="the-recording-script" class="level2">
<h2 class="anchored" data-anchor-id="the-recording-script">The Recording Script</h2>
<p>Putting these together gives us a complete recording script (below). I’ve added some <code>echo</code> outputs for the user:</p>
<p><img src="https://n-sweep.github.io/posts/2024-06-23-copying-my-voice-to-the-clipboard/images/rec_script.gif" width="600"></p>
<div class="sourceCode" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode sh code-with-copy"><code class="sourceCode bash"><span id="cb4-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#!/usr/bin/env bash</span></span>
<span id="cb4-2"></span>
<span id="cb4-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mkdir</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-p</span> /tmp/dictation</span>
<span id="cb4-4"></span>
<span id="cb4-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># check for filename or use timestamp</span></span>
<span id="cb4-6"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">[</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$#</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">-gt</span> 0 <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">]</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">;</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">then</span></span>
<span id="cb4-7">    <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">filename</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$(</span><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">echo</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$@</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">|</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sed</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'s/ /_/g'</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb4-8"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span></span>
<span id="cb4-9">    <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">filename</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$(</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">date</span> +%s<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb4-10"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fi</span></span>
<span id="cb4-11"></span>
<span id="cb4-12"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">file_loc</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"/tmp/dictation/</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$filename</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">.mp3"</span></span>
<span id="cb4-13"></span>
<span id="cb4-14"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">parecord</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$file_loc</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">&amp;</span></span>
<span id="cb4-15"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">parec_pid</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$!</span></span>
<span id="cb4-16"></span>
<span id="cb4-17"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">echo</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"recording. press q to stop"</span></span>
<span id="cb4-18"></span>
<span id="cb4-19"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># loop waits for 'q' and stops recording</span></span>
<span id="cb4-20"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">while</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">:</span></span>
<span id="cb4-21"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">do</span></span>
<span id="cb4-22">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">read</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-n</span> 1 <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">key</span></span>
<span id="cb4-23">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">[</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$key</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"q"</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">]</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">;</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">then</span></span>
<span id="cb4-24">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">echo</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">&amp;&amp;</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">echo</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"stopping recording..."</span></span>
<span id="cb4-25">        <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sleep</span> 2s</span>
<span id="cb4-26">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">kill</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-SIGINT</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$parec_pid</span></span>
<span id="cb4-27">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">break</span></span>
<span id="cb4-28">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fi</span></span>
<span id="cb4-29"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">done</span></span>
<span id="cb4-30"></span>
<span id="cb4-31"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">echo</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">${file_loc}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;"> saved."</span></span></code></pre></div>
</section>
</section>
<section id="deepgram" class="level1">
<h1>Deepgram</h1>
<p>We’re saving audio successfully, so now it’s time to send it off to the Deepgram API for transcription. The <a href="https://developers.deepgram.com/docs/getting-started-with-pre-recorded-audio#curl">documentation</a> has examples for remote files and for local files - we want the local file example:</p>
<p><img src="https://n-sweep.github.io/posts/2024-06-23-copying-my-voice-to-the-clipboard/images/dg_docs.gif" width="600"></p>
<section id="editing-the-request" class="level2">
<h2 class="anchored" data-anchor-id="editing-the-request">Editing the Request</h2>
<div class="sourceCode" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode sh code-with-copy"><code class="sourceCode bash"><span id="cb5-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">curl</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb5-2">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--request</span> POST <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb5-3">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--header</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Authorization: Token YOUR_DEEPGRAM_API_KEY'</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb5-4">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--header</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Content-Type: audio/wav'</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb5-5">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--data-binary</span> @youraudio.wav <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb5-6">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--url</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'https://api.deepgram.com/v1/listen?model=nova-2&amp;smart_format=true'</span></span></code></pre></div>
<p>We’re going to use the default model and format rules from this example, so the two variables we need to concern ourselves with are the audio we want to transcribe and our Deepgram API key. Our recording script from above is already providing us with the audio file, so we’ll get to that later.</p>
<section id="api-key" class="level3">
<h3 class="anchored" data-anchor-id="api-key">API Key</h3>
<p>Rather than set my API key as an environment variable, I have saved it at a local location in my home directory, from which the script will read before providing the token to the request.</p>
<div class="sourceCode" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode sh code-with-copy"><code class="sourceCode bash"><span id="cb6-1"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">DEEPGRAM_API_KEY</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$(</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">head</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-1</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$HOME</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">/path/to/my/deepgram/token"</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">)</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span></span>
<span id="cb6-2"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">curl</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb6-3">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--request</span> POST <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb6-4">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--header</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Authorization: Token </span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">${DEEPGRAM_API_KEY}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb6-5">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--header</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Content-Type: audio/wav'</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb6-6">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--data-binary</span> @youraudio.wav <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb6-7">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--url</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'https://api.deepgram.com/v1/listen?model=nova-2&amp;smart_format=true'</span></span></code></pre></div>
<p>Specifically note the change from the example’s single quotes to a set of double quotes when inserting the variable:</p>
<p><img src="https://n-sweep.github.io/posts/2024-06-23-copying-my-voice-to-the-clipboard/images/dg_api_key.gif" width="600"></p>
</section>
</section>
<section id="this-is-only-a-test" class="level2">
<h2 class="anchored" data-anchor-id="this-is-only-a-test">This is Only a Test</h2>
<p>Running a test with our test recording from earlier…</p>
<div class="sourceCode" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode sh code-with-copy"><code class="sourceCode bash"><span id="cb7-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">--data-binary</span> @/tmp/dictation/test.mp3 <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\</span></span></code></pre></div>
<p>And it works! But it doesn’t just return the simple text we’re looking for, the response we get back is <a href="https://www.json.org/">JSON</a>.</p>
<p><img src="https://n-sweep.github.io/posts/2024-06-23-copying-my-voice-to-the-clipboard/images/what_is_that.gif" width="600"></p>
</section>
<section id="parsing-the-response" class="level2">
<h2 class="anchored" data-anchor-id="parsing-the-response">Parsing the Response</h2>
<p>Let’s add an output flag to the transcription call to save the file so we can work with it without re-calling the API again and again:</p>
<div class="sourceCode" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode sh code-with-copy"><code class="sourceCode bash"><span id="cb8-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">curl</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-o</span> /tmp/dictation/test.json <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb8-2"># ...</span></code></pre></div>
<section id="jq" class="level3">
<h3 class="anchored" data-anchor-id="jq"><code>jq</code></h3>
<p>Next we’ll use <a href="https://jqlang.github.io/jq/"><code>jq</code></a> to make the output more readable:</p>
<div class="sourceCode" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode sh code-with-copy"><code class="sourceCode bash"><span id="cb9-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cat</span> /tmp/dictation/test.json <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">|</span> <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">jq</span></span></code></pre></div>
<div class="sourceCode" id="cb10" style="background: #f1f3f5;"><pre class="sourceCode json code-with-copy"><code class="sourceCode json"><span id="cb10-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb10-2">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">"metadata"</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">:</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb10-3">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">"transaction_key"</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">:</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"deprecated"</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb10-4">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">"request_id"</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">:</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"73edfe3e-404b-4331-8736-1629c9b101f6"</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb10-5">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">"sha256"</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">:</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"redacted because it's probably sensitive"</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb10-6">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">"created"</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">:</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"2024-06-23T13:58:29.948Z"</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb10-7">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">"duration"</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">:</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">3.9779375</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb10-8">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">"channels"</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">:</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb10-9">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">"models"</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">:</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">[</span></span>
<span id="cb10-10">      <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"30089e05-99d1-4376-b32e-c263170674af"</span></span>
<span id="cb10-11">    <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">]</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb10-12">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">"model_info"</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">:</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb10-13">      <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">"30089e05-99d1-4376-b32e-c263170674af"</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">:</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb10-14">        <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">"name"</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">:</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"2-general-nova"</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb10-15">        <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">"version"</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">:</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"2024-01-09.29447"</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb10-16">        <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">"arch"</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">:</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"nova-2"</span></span>
<span id="cb10-17">      <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb10-18">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb10-19">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">},</span></span>
<span id="cb10-20">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">"results"</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">:</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb10-21">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">"channels"</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">:</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">[</span></span>
<span id="cb10-22">      <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb10-23">        <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">"alternatives"</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">:</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">[</span></span>
<span id="cb10-24">          <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb10-25">            <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">"transcript"</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">:</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Check 123."</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb10-26">            <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">"confidence"</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">:</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">.</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">90280044</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb10-27">            <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">"words"</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">:</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">[</span></span>
<span id="cb10-28">              <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb10-29">                <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">"word"</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">:</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"check"</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb10-30">                <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">"start"</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">:</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">.</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">96</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb10-31">                <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">"end"</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">:</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.46</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb10-32">                <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">"confidence"</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">:</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">.</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">90280044</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb10-33">                <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">"punctuated_word"</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">:</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Check"</span></span>
<span id="cb10-34">              <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">}</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb10-35">              <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb10-36">                <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">"word"</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">:</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"123"</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb10-37">                <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">"start"</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">:</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.68</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb10-38">                <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">"end"</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">:</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">2.1799998</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb10-39">                <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">"confidence"</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">:</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">.</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">88839245</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb10-40">                <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">"punctuated_word"</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">:</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"123."</span></span>
<span id="cb10-41">              <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb10-42">            <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">]</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb10-43">            <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">"paragraphs"</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">:</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb10-44">              <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">"transcript"</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">:</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">Check 123."</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb10-45">              <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">"paragraphs"</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">:</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">[</span></span>
<span id="cb10-46">                <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb10-47">                  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">"sentences"</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">:</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">[</span></span>
<span id="cb10-48">                    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb10-49">                      <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">"text"</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">:</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Check 123."</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb10-50">                      <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">"start"</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">:</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">.</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">96</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb10-51">                      <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">"end"</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">:</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">2.1799998</span></span>
<span id="cb10-52">                    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb10-53">                  <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">]</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb10-54">                  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">"num_words"</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">:</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb10-55">                  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">"start"</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">:</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">.</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">96</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb10-56">                  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">"end"</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">:</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">2.1799998</span></span>
<span id="cb10-57">                <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb10-58">              <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">]</span></span>
<span id="cb10-59">            <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb10-60">          <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb10-61">        <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">]</span></span>
<span id="cb10-62">      <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb10-63">    <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">]</span></span>
<span id="cb10-64">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb10-65"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
<p>Much better!</p>
<p>This data is small enough for us to read and determine that our target is in <code>results &gt; channels &gt; alternatives &gt; transcript</code> but if your data is too unwieldy to scroll through, we can use <code>jq</code> to get the keys of the outermost mapping:</p>
<div class="sourceCode" id="cb11" style="background: #f1f3f5;"><pre class="sourceCode sh code-with-copy"><code class="sourceCode bash"><span id="cb11-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cat</span> /tmp/dictation/test.json <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">|</span> <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">jq</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"keys"</span></span></code></pre></div>
<div class="sourceCode" id="cb12" style="background: #f1f3f5;"><pre class="sourceCode json code-with-copy"><code class="sourceCode json"><span id="cb12-1"><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">[</span></span>
<span id="cb12-2">  <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"metadata"</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb12-3">  <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"results"</span></span>
<span id="cb12-4"><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">]</span></span></code></pre></div>
<p>Then we can use those keys to index the nested structure:</p>
<div class="sourceCode" id="cb13" style="background: #f1f3f5;"><pre class="sourceCode sh code-with-copy"><code class="sourceCode bash"><span id="cb13-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cat</span> /tmp/dictation/test.json <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">|</span> <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">jq</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">".results"</span></span></code></pre></div>
<div class="sourceCode" id="cb14" style="background: #f1f3f5;"><pre class="sourceCode json code-with-copy"><code class="sourceCode json"><span id="cb14-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb14-2">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">"results"</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">:</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb14-3">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">"channels"</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">:</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">[</span></span>
<span id="cb14-4">      <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb14-5">        <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">"alternatives"</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">:</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">[</span></span>
<span id="cb14-6">          <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb14-7">            <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">"transcript"</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">:</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Check 123."</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb14-8">            <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">"confidence"</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">:</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">.</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">90280044</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb14-9">            <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">"words"</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">:</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">[</span></span>
<span id="cb14-10">              <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb14-11">                <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">"word"</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">:</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"check"</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb14-12">                <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">"start"</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">:</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">.</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">96</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb14-13">                <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">"end"</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">:</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.46</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb14-14">                <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">"confidence"</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">:</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">.</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">90280044</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb14-15">                <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">"punctuated_word"</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">:</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Check"</span></span>
<span id="cb14-16">              <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">}</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb14-17">              <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb14-18">                <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">"word"</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">:</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"123"</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb14-19">                <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">"start"</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">:</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.68</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb14-20">                <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">"end"</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">:</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">2.1799998</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb14-21">                <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">"confidence"</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">:</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">.</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">88839245</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb14-22">                <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">"punctuated_word"</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">:</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"123."</span></span>
<span id="cb14-23">              <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb14-24">            <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">]</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb14-25">            <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">"paragraphs"</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">:</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb14-26">              <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">"transcript"</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">:</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">Check 123."</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb14-27">              <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">"paragraphs"</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">:</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">[</span></span>
<span id="cb14-28">                <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb14-29">                  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">"sentences"</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">:</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">[</span></span>
<span id="cb14-30">                    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb14-31">                      <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">"text"</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">:</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Check 123."</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb14-32">                      <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">"start"</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">:</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">.</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">96</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb14-33">                      <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">"end"</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">:</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">2.1799998</span></span>
<span id="cb14-34">                    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb14-35">                  <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">]</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb14-36">                  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">"num_words"</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">:</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb14-37">                  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">"start"</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">:</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">.</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">96</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb14-38">                  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">"end"</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">:</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">2.1799998</span></span>
<span id="cb14-39">                <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb14-40">              <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">]</span></span>
<span id="cb14-41">            <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb14-42">          <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb14-43">        <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">]</span></span>
<span id="cb14-44">      <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb14-45">    <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">]</span></span>
<span id="cb14-46">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb14-47"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
<p><br></p>
<p>Check the keys of the result, then query further:</p>
<div class="sourceCode" id="cb15" style="background: #f1f3f5;"><pre class="sourceCode sh code-with-copy"><code class="sourceCode bash"><span id="cb15-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cat</span> /tmp/dictation/test.json <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">|</span> <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">jq</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">".results | keys"</span></span></code></pre></div>
<div class="sourceCode" id="cb16" style="background: #f1f3f5;"><pre class="sourceCode json code-with-copy"><code class="sourceCode json"><span id="cb16-1"><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">[</span></span>
<span id="cb16-2">  <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"channels"</span></span>
<span id="cb16-3"><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">]</span></span></code></pre></div>
<div class="sourceCode" id="cb17" style="background: #f1f3f5;"><pre class="sourceCode sh code-with-copy"><code class="sourceCode bash"><span id="cb17-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cat</span> /tmp/dictation/test.json <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">|</span> <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">jq</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">".results.channels"</span></span></code></pre></div>
<div class="sourceCode" id="cb18" style="background: #f1f3f5;"><pre class="sourceCode json code-with-copy"><code class="sourceCode json"><span id="cb18-1"><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">[</span></span>
<span id="cb18-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb18-3">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">"alternatives"</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">:</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">[</span></span>
<span id="cb18-4">      <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb18-5">        <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">"transcript"</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">:</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Check 123."</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb18-6">        <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">"confidence"</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">:</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">.</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">90280044</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb18-7">        <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">"words"</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">:</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">[</span></span>
<span id="cb18-8">          <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb18-9">            <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">"word"</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">:</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"check"</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb18-10">            <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">"start"</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">:</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">.</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">96</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb18-11">            <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">"end"</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">:</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.46</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb18-12">            <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">"confidence"</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">:</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">.</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">90280044</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb18-13">            <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">"punctuated_word"</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">:</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Check"</span></span>
<span id="cb18-14">          <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">}</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb18-15">          <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb18-16">            <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">"word"</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">:</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"123"</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb18-17">            <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">"start"</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">:</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.68</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb18-18">            <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">"end"</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">:</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">2.1799998</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb18-19">            <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">"confidence"</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">:</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">.</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">88839245</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb18-20">            <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">"punctuated_word"</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">:</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"123."</span></span>
<span id="cb18-21">          <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb18-22">        <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">]</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb18-23">        <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">"paragraphs"</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">:</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb18-24">          <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">"transcript"</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">:</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">Check 123."</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb18-25">          <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">"paragraphs"</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">:</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">[</span></span>
<span id="cb18-26">            <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb18-27">              <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">"sentences"</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">:</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">[</span></span>
<span id="cb18-28">                <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb18-29">                  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">"text"</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">:</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Check 123."</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb18-30">                  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">"start"</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">:</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">.</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">96</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb18-31">                  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">"end"</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">:</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">2.1799998</span></span>
<span id="cb18-32">                <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb18-33">              <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">]</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb18-34">              <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">"num_words"</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">:</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb18-35">              <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">"start"</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">:</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">.</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">96</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb18-36">              <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">"end"</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">:</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">2.1799998</span></span>
<span id="cb18-37">            <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb18-38">          <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">]</span></span>
<span id="cb18-39">        <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb18-40">      <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb18-41">    <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">]</span></span>
<span id="cb18-42">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb18-43"><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">]</span></span></code></pre></div>
<p><br></p>
<p><code>channels</code> is a list, so we access it with a pair of square brackets. The same is true for its child <code>alternatives</code>:</p>
<div class="sourceCode" id="cb19" style="background: #f1f3f5;"><pre class="sourceCode sh code-with-copy"><code class="sourceCode bash"><span id="cb19-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cat</span> /tmp/dictation/test.json <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">|</span> <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">jq</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">".results.channels[].alternatives[]"</span></span></code></pre></div>
<div class="sourceCode" id="cb20" style="background: #f1f3f5;"><pre class="sourceCode json code-with-copy"><code class="sourceCode json"><span id="cb20-1"><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">[</span></span>
<span id="cb20-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb20-3">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">"transcript"</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">:</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Check 123."</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb20-4">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">"confidence"</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">:</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">.</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">90280044</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb20-5">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">"words"</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">:</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">[</span></span>
<span id="cb20-6">      <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb20-7">        <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">"word"</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">:</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"check"</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb20-8">        <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">"start"</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">:</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">.</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">96</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb20-9">        <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">"end"</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">:</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.46</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb20-10">        <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">"confidence"</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">:</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">.</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">90280044</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb20-11">        <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">"punctuated_word"</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">:</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Check"</span></span>
<span id="cb20-12">      <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">}</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb20-13">      <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb20-14">        <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">"word"</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">:</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"123"</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb20-15">        <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">"start"</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">:</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.68</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb20-16">        <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">"end"</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">:</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">2.1799998</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb20-17">        <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">"confidence"</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">:</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">.</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">88839245</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb20-18">        <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">"punctuated_word"</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">:</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"123."</span></span>
<span id="cb20-19">      <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb20-20">    <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">]</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb20-21">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">"paragraphs"</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">:</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb20-22">      <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">"transcript"</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">:</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">Check 123."</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb20-23">      <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">"paragraphs"</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">:</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">[</span></span>
<span id="cb20-24">        <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb20-25">          <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">"sentences"</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">:</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">[</span></span>
<span id="cb20-26">            <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb20-27">              <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">"text"</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">:</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Check 123."</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb20-28">              <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">"start"</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">:</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">.</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">96</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb20-29">              <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">"end"</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">:</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">2.1799998</span></span>
<span id="cb20-30">            <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb20-31">          <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">]</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb20-32">          <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">"num_words"</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">:</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb20-33">          <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">"start"</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">:</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">.</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">96</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb20-34">          <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">"end"</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">:</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">2.1799998</span></span>
<span id="cb20-35">        <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb20-36">      <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">]</span></span>
<span id="cb20-37">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb20-38">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb20-39"><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">]</span></span></code></pre></div>
<p><br></p>
<div class="sourceCode" id="cb21" style="background: #f1f3f5;"><pre class="sourceCode sh code-with-copy"><code class="sourceCode bash"><span id="cb21-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cat</span> /tmp/dictation/test.json <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">|</span> <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">jq</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">".results.channels[].alternatives[] | keys"</span></span></code></pre></div>
<div class="sourceCode" id="cb22" style="background: #f1f3f5;"><pre class="sourceCode json code-with-copy"><code class="sourceCode json"><span id="cb22-1"><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">[</span></span>
<span id="cb22-2">  <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"confidence"</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb22-3">  <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"paragraphs"</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb22-4">  <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"transcript"</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb22-5">  <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"words"</span></span>
<span id="cb22-6"><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">]</span></span></code></pre></div>
<p>An item in <code>alternatives</code> contains the full <code>transcript</code> that we are looking for, a confidence score (from 0 to 1), and a by-paragraph and by-word breakdown. Let’s get the transcript:</p>
<div class="sourceCode" id="cb23" style="background: #f1f3f5;"><pre class="sourceCode sh code-with-copy"><code class="sourceCode bash"><span id="cb23-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cat</span> /tmp/dictation/test.json <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">|</span> <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">jq</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">".results.channels[].alternatives[].transcript"</span></span></code></pre></div>
<div class="sourceCode" id="cb24" style="background: #f1f3f5;"><pre class="sourceCode sh code-with-copy"><code class="sourceCode bash"><span id="cb24-1"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Check 123."</span></span></code></pre></div>
</section>
<section id="removing-the-quotes" class="level3">
<h3 class="anchored" data-anchor-id="removing-the-quotes">“Removing the Quotes”</h3>
<p>The output from <code>jq</code> includes a set of quotes that we don’t want in our final product; we can remove them with <a href="https://www.gnu.org/software/sed/manual/sed.html"><code>sed</code></a>, which can use pattern matching for text replacement:</p>
<div class="sourceCode" id="cb25" style="background: #f1f3f5;"><pre class="sourceCode sh code-with-copy"><code class="sourceCode bash"><span id="cb25-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cat</span> /tmp/dictation/test.json <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb25-2">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">|</span> <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">jq</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">".results.channels[].alternatives[].transcript"</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb25-3">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">|</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sed</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'s/^"\(.*\)"$/\1/'</span></span></code></pre></div>
<div class="sourceCode" id="cb26" style="background: #f1f3f5;"><pre class="sourceCode sh code-with-copy"><code class="sourceCode bash"><span id="cb26-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">Check</span> 123.</span></code></pre></div>
<p>Looking good!</p>
</section>
</section>
</section>
<section id="copying-the-transcription-to-the-clipboard" class="level1">
<h1>Copying the Transcription to the Clipboard</h1>
<p>The bow on top of this project is copying the resulting transcription to the clipboard for easy pasting into your AIM conversation or MySpace post. For this we’ll use <a href=""><code>xclip</code></a>:</p>
<pre><code>WHAT IS XCLIP?
==============
xclip is a command line utility that is designed to run on any system with an
X11 implementation. It provides an interface to X selections ("the clipboard")
from the command line. It can read data from standard in or a file and place it
in an X selection for pasting into other X applications. xclip can also print
an X selection to standard out, which can then be redirected to a file or
another program.</code></pre>
<p>Usage is pretty straightforward; we use the <code>-i</code> flag to push text into the clipboard (alternatively, the <code>-o</code> flag can be used to read the contents of the clipboard):</p>
<div class="sourceCode" id="cb28" style="background: #f1f3f5;"><pre class="sourceCode sh code-with-copy"><code class="sourceCode bash"><span id="cb28-1"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">echo</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Hi mom!"</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">|</span> <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">xclip</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-i</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-selection</span> clipboard</span></code></pre></div>
<p>Here’s what it would look like added to our parsing test code:</p>
<div class="sourceCode" id="cb29" style="background: #f1f3f5;"><pre class="sourceCode sh code-with-copy"><code class="sourceCode bash"><span id="cb29-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cat</span> /tmp/dictation/test.json <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb29-2">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">|</span> <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">jq</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">".results.channels[].alternatives[].transcript"</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb29-3">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">|</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sed</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'s/^"\(.*\)"$/\1/'</span></span>
<span id="cb29-4">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">|</span> <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">xclip</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-i</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-selection</span> clipboard</span></code></pre></div>
</section>
<section id="putting-it-all-together" class="level1">
<h1>Putting It All Together</h1>
<p>The final script is below, see the <code>[NOTE]</code>s for explanation of things not explicitly shown above. Here it is in action:</p>
<p><img src="https://n-sweep.github.io/posts/2024-06-23-copying-my-voice-to-the-clipboard/images/dg_only_a_test.gif" width="600"></p>
<div class="sourceCode" id="cb30" style="background: #f1f3f5;"><pre class="sourceCode sh code-with-copy"><code class="sourceCode bash"><span id="cb30-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#!/usr/bin/env bash</span></span>
<span id="cb30-2"></span>
<span id="cb30-3"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">DEEPGRAM_API_KEY</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$(</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">head</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-1</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$HOME</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">/path/to/my/deepgram/token"</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">)</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span></span>
<span id="cb30-4"></span>
<span id="cb30-5"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mkdir</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-p</span> /tmp/dictation</span>
<span id="cb30-6"></span>
<span id="cb30-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># check for filename or use timestamp</span></span>
<span id="cb30-8"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">[</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$#</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">-gt</span> 0 <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">]</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">;</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">then</span></span>
<span id="cb30-9">    <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">filename</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$(</span><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">echo</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$@</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">|</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sed</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'s/ /_/g'</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb30-10"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span></span>
<span id="cb30-11">    <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">filename</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$(</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">date</span> +%s<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb30-12"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fi</span></span>
<span id="cb30-13"></span>
<span id="cb30-14"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">file_loc</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"/tmp/dictation/</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$filename</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">.mp3"</span></span>
<span id="cb30-15"></span>
<span id="cb30-16"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">parecord</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$file_loc</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">&amp;</span></span>
<span id="cb30-17"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">parec_pid</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$!</span></span>
<span id="cb30-18"></span>
<span id="cb30-19"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">echo</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"recording. press q to stop"</span></span>
<span id="cb30-20"></span>
<span id="cb30-21"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># loop waits for 'q' and stops recording</span></span>
<span id="cb30-22"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">while</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">:</span></span>
<span id="cb30-23"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">do</span></span>
<span id="cb30-24">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">read</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-n</span> 1 <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">key</span></span>
<span id="cb30-25">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">[</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$key</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"q"</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">]</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">;</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">then</span></span>
<span id="cb30-26">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">echo</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">&amp;&amp;</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">echo</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"stopping recording..."</span></span>
<span id="cb30-27">        <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sleep</span> 2s</span>
<span id="cb30-28">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">kill</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-SIGINT</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$parec_pid</span></span>
<span id="cb30-29">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">break</span></span>
<span id="cb30-30">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fi</span></span>
<span id="cb30-31"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">done</span></span>
<span id="cb30-32"></span>
<span id="cb30-33"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">echo</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">${file_loc}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;"> saved."</span></span>
<span id="cb30-34"></span>
<span id="cb30-35"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># [</span><span class="al" style="color: #AD0000;
background-color: null;
font-style: inherit;">NOTE</span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]: set the output location for Deepgram's response data using file_loc from the record phase</span></span>
<span id="cb30-36"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">output_loc</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$(</span><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">echo</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$file_loc</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">|</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sed</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'s/mp3/json/'</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb30-37"></span>
<span id="cb30-38"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">echo</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'analyzing audio...'</span></span>
<span id="cb30-39"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">curl</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-so</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$output_loc</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb30-40">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--request</span> POST <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb30-41">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--header</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Authorization: Token </span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">${DEEPGRAM_API_KEY}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb30-42">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--header</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Content-Type: audio/wav'</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb30-43">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--data-binary</span> @<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$file_loc</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb30-44">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--url</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'https://api.deepgram.com/v1/listen?model=nova-2&amp;smart_format=true'</span></span>
<span id="cb30-45"></span>
<span id="cb30-46"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">echo</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">${output_loc}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;"> saved."</span></span>
<span id="cb30-47"></span>
<span id="cb30-48"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># [</span><span class="al" style="color: #AD0000;
background-color: null;
font-style: inherit;">NOTE</span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]: assign the transcript to a variable including quotes</span></span>
<span id="cb30-49"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">transcript</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$(</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cat</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$output_loc</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb30-50">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">|</span> <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">jq</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">".results.channels[].alternatives[].transcript"</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb30-51"></span>
<span id="cb30-52"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># [</span><span class="al" style="color: #AD0000;
background-color: null;
font-style: inherit;">NOTE</span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]: strip quotes before copying to clipboard</span></span>
<span id="cb30-53"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">echo</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$transcript</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">|</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sed</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'s/^"\(.*\)"$/\1/'</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">|</span> <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">xclip</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-i</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-selection</span> clipboard</span>
<span id="cb30-54"></span>
<span id="cb30-55"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">echo</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$transcript</span></span>
<span id="cb30-56"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">echo</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'copied to clipboard'</span></span></code></pre></div>
<p><br></p>
<hr>


</section>

<p><br><br>This page lovingly generated by <a href="https://quarto.org/">Quarto</a> ❤️</p> ]]></description>
  <category>programming</category>
  <category>bash</category>
  <category>deepgram</category>
  <category>automation</category>
  <guid>https://n-sweep.github.io/posts/2024-06-23-copying-my-voice-to-the-clipboard/</guid>
  <pubDate>Sun, 23 Jun 2024 04:00:00 GMT</pubDate>
</item>
<item>
  <title>How I Made This Blog Again With Quarto and Github Pages</title>
  <dc:creator>n sweep</dc:creator>
  <link>https://n-sweep.github.io/posts/2024-06-14-how-i-made-this-blog-again/</link>
  <description><![CDATA[ 





<p>Way back in 2021 I learned how to build a simple static website on <a href="https://pages.github.com/">GitHub Pages</a>, wrote a few articles (including one about <a href="../../posts/2021-07-05-how-i-made-this-blog/2021-07-05-how-i-made-this-blog.html">how I did it</a>), and then promptly forgot about the project amidst the noise of distractions such as my day job. Now I’m back to do it all again! Only this time, with the awesome open-source scientific and technical publishing system <a href="https://quarto.org/">Quarto</a>.</p>
<p><img src="https://n-sweep.github.io/posts/2024-06-14-how-i-made-this-blog-again/images/quarto.png"></p>
<section id="prerequisite-packages" class="level1">
<h1>Prerequisite Packages</h1>
<p>If you want to follow along, you’ll need to ensure some prerequisite packages are installed. It’s a shorter list than last time:</p>
<ul>
<li><a href="https://git-scm.com/">install git</a></li>
<li><a href="https://quarto.org/docs/get-started/">install Quarto</a></li>
</ul>
<blockquote class="blockquote">
<p>Note: Package installation is left as an exercise for the reader, as I am on a <a href="https://nixos.org">non-standard operating system</a></p>
</blockquote>
</section>
<section id="hosting-with-github-pages" class="level1">
<h1>Hosting with Github Pages</h1>
<p>There are <a href="https://quarto.org/docs/publishing/">a number of ways</a> to publish a Quarto website; we’ll be using GitHub Pages. There are also a few different ways to publish to Pages; we’ll be using the Quarto <a href="https://quarto.org/docs/publishing/github-pages.html#publish-command">publish command</a>.</p>
<section id="create-a-new-github-repository" class="level2">
<h2 class="anchored" data-anchor-id="create-a-new-github-repository">Create a New GitHub Repository</h2>
<p><strong>Important:</strong> Your repo should be named with your github username in the format <code>username.github.io</code> for GitHub to host it correctly.</p>
<p><a href="https://docs.github.com/en/get-started/quickstart/create-a-repo">Click here</a> for a guide on creating a new GitHub repo.</p>
</section>
<section id="clone-the-repo-locally" class="level2">
<h2 class="anchored" data-anchor-id="clone-the-repo-locally">Clone the Repo Locally</h2>
<p>Next we’ll move to the directory where we want to store the site’s files and clone the repo to our local machine:</p>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode sh code-with-copy"><code class="sourceCode bash"><span id="cb1-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># this will create a new directory at `/my/target/directory/username.github.io`</span></span>
<span id="cb1-2"></span>
<span id="cb1-3"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">cd</span> /my/target/directory</span>
<span id="cb1-4"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">git</span> clone https://github.com/username/username.github.io.git</span></code></pre></div>
</section>
<section id="prepare-the-repo" class="level2">
<h2 class="anchored" data-anchor-id="prepare-the-repo">Prepare the Repo</h2>
<p>According to the <a href="https://quarto.org/docs/publishing/github-pages.html#publish-command">Quarto docs</a>, the repo requires a branch called <code>gh-pages</code>, which the <code>quarto publish</code> command will write the site to automatically.</p>
<section id="create-the-source-branch" class="level3">
<h3 class="anchored" data-anchor-id="create-the-source-branch">Create the Source Branch</h3>
<div class="sourceCode" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode sh code-with-copy"><code class="sourceCode bash"><span id="cb2-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">git</span> checkout <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--orphan</span> gh-pages</span>
<span id="cb2-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">git</span> reset <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--hard</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># make sure all changes are committed before running this!</span></span>
<span id="cb2-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">git</span> commit <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--allow-empty</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-m</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Initializing gh-pages branch"</span></span>
<span id="cb2-4"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">git</span> push origin gh-pages</span></code></pre></div>
<p><strong>Note</strong> - from <a href="https://quarto.org/docs/publishing/github-pages.html#source-branch">the documentation</a>:</p>
<blockquote class="blockquote">
<p>Double-check that the last git push action has indeed set the Settings : Pages for your repository as expected in the previous figure. […]</p>
</blockquote>
<p>The screenshot from the docs is a little out of date as of my writing this. They are asking us to ensure our branch is set to “gh-pages” and our directory is set to “root” like below. (It seems that this <em>should</em> happen automatically during one of the previous steps, but best to check if the guide recommends it.)</p>
<p><img src="https://n-sweep.github.io/posts/2024-06-14-how-i-made-this-blog-again/images/gh-pages.png" width="800"></p>
</section>
<section id="gitignore" class="level3">
<h3 class="anchored" data-anchor-id="gitignore"><code>.gitignore</code></h3>
<p>Quarto is going to generate some files that we don’t want to check into version control. Let’s add the following to lines to our repo’s <a href="https://git-scm.com/docs/gitignore"><code>.gitignore</code></a> file:</p>
<div class="sourceCode" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode sh code-with-copy"><code class="sourceCode bash"><span id="cb3-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">/.quarto/</span></span>
<span id="cb3-2"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">/_site/</span></span></code></pre></div>
</section>
</section>
</section>
<section id="quarto" class="level1">
<h1>Quarto</h1>
<p>Publishing is going to be a snap with all that GitHub setup out of the way. But now we need something to publish, and Quarto can help with that too.</p>
<section id="create-and-view-a-template-website" class="level2">
<h2 class="anchored" data-anchor-id="create-and-view-a-template-website">Create and View a Template Website</h2>
<section id="quarto-create-project" class="level3">
<h3 class="anchored" data-anchor-id="quarto-create-project"><code>quarto create project</code></h3>
<p>Quarto provides a quickstart command with two options (<code>website</code> and <code>blog</code>) for initializing a website. This command will create a new directory if we provide it a name, but we want to use our new git repository:</p>
<div class="sourceCode" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode sh code-with-copy"><code class="sourceCode bash"><span id="cb4-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># we should still be in `/my/target/directory` from the previous steps</span></span>
<span id="cb4-2"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">cd</span> username.github.io</span>
<span id="cb4-3"></span>
<span id="cb4-4"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">quarto</span> create project website .</span>
<span id="cb4-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># or</span></span>
<span id="cb4-6"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">quarto</span> create project blog .</span></code></pre></div>
<p>There may be other differences, but the <code>blog</code> option initializes the site with a <a href="https://quarto.org/docs/websites/website-listings.html">listing page</a> as the front page while the <code>website</code> option does not.</p>
</section>
<section id="quarto-preview" class="level3">
<h3 class="anchored" data-anchor-id="quarto-preview"><code>quarto preview</code></h3>
<p>While it isn’t very personal yet, we now have a skeleton of a website. Let’s take a look at it with:</p>
<div class="sourceCode" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode sh code-with-copy"><code class="sourceCode bash"><span id="cb5-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">quarto</span> preview</span></code></pre></div>
<p>I chose the <code>blog</code> option, so this command will open a browser tab that looks something like this:</p>
<p><img src="https://quarto.org/docs/websites/images/myblog.png" width="800"></p>
</section>
</section>
</section>
<section id="personalize" class="level1">
<h1>Personalize</h1>
<p>The previous steps created a number of files in our repo. From <a href="https://quarto.org/docs/websites/website-blog.html">the documentation</a>:</p>
<blockquote class="blockquote">
<p>Here’s a summary of the key files created within the starter blog project:</p>
<table class="caption-top table">
<thead>
<tr class="header">
<th>File</th>
<th>Description</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td><code>_quarto.yml</code></td>
<td>Quarto project file.</td>
</tr>
<tr class="even">
<td><code>index.qmd</code></td>
<td>Blog home page.</td>
</tr>
<tr class="odd">
<td><code>about.qmd</code></td>
<td>Blog about page.</td>
</tr>
<tr class="even">
<td><code>posts/</code></td>
<td>Directory containing posts</td>
</tr>
<tr class="odd">
<td><code>posts/_metadata.yml</code></td>
<td>Shared options for posts</td>
</tr>
<tr class="even">
<td><code>styles.css</code></td>
<td>Custom CSS for website</td>
</tr>
</tbody>
</table>
</blockquote>
<p><code>.qmd</code> files are essentially <a href="https://www.markdownguide.org/">markdown</a> files with some special Quarto sauce. We can edit <code>index.qmd</code> and <code>about.qmd</code> to change the content of the pages, and even create new <code>.qmd</code> files for additional pages. New pages can be linked to <a href="https://quarto.org/docs/websites/#linking">from other documents</a> and <a href="https://quarto.org/docs/websites/#config-file">in the navbar</a>. Since I used the <code>quarto create project blog</code> command, the list includes a <a href="https://quarto.org/docs/websites/website-blog.html#posts-directory"><code>posts/</code> directory</a>, where blog posts like this one (also written in markdown) live.</p>
<p>If <code>quarto preview</code> is still running in your terminal, the page in your browser should reload whenever you make changes. If not, just run <code>quarto preview</code> again to have a look:</p>
<p><img src="https://n-sweep.github.io/posts/2024-06-14-how-i-made-this-blog-again/images/new_post.png" width="800"></p>
</section>
<section id="publish" class="level1">
<h1>Publish</h1>
<p>Now the git and GitHub setup we did earlier pays off. Once we’re happy with the changes and our new blog post, we’ll run <code>quarto publish .</code></p>
<p><img src="https://n-sweep.github.io/posts/2024-06-14-how-i-made-this-blog-again/images/quarto_publish.gif" width="800"></p>
<p>And that’s it! The rest is automated by Quarto, and when it is finished, it will open the live, updated website in a new browser tab for us to admire.</p>
<p><img src="https://n-sweep.github.io/posts/2024-06-14-how-i-made-this-blog-again/images/front_page.png" width="800"></p>
<p><br></p>
<hr>


</section>

<p><br><br>This page lovingly generated by <a href="https://quarto.org/">Quarto</a> ❤️</p> ]]></description>
  <category>github-pages</category>
  <category>quarto</category>
  <category>python</category>
  <category>github</category>
  <guid>https://n-sweep.github.io/posts/2024-06-14-how-i-made-this-blog-again/</guid>
  <pubDate>Fri, 14 Jun 2024 04:00:00 GMT</pubDate>
  <media:content url="https://n-sweep.github.io/posts/2024-06-14-how-i-made-this-blog-again/images/quarto.png" medium="image" type="image/png" height="120" width="144"/>
</item>
<item>
  <title>Has Hasbro Ruined Magic: the Gathering?</title>
  <dc:creator>n sweep</dc:creator>
  <link>https://n-sweep.github.io/posts/2022-11-19-hasbro-ruins-mtg/2022-11-19-hasbro-ruins-mtg.html</link>
  <description><![CDATA[ 





<figure class="figure">
<img src="https://n-sweep.github.io/posts/2022-11-19-hasbro-ruins-mtg/images/c21-145-greed.jpg" class="figure-img">
<figcaption>
<i>Greed</i> - Illustrated by <a href="https://www.izzymedrano.com/">Izzy</a>
</figcaption>
</figure>
<ul>
<li><h4 id="bank-of-america-says-hasbro-could-fall-34-due-to-company-ruining-magic-the-gathering-card-game" class="anchored"><a href="https://www.cnbc.com/2022/11/14/bank-of-america-says-hasbro-could-fall-34percent-as-company-kills-magic-the-gathering-card-game.html">Bank of America says Hasbro could fall 34% due to company ruining ‘Magic: the Gathering’ card game</a></h4></li>
</ul>
<p>I played <em>Magic</em> for a long time, so this article really caught my eye. It’s behind a paywall, though, so if you don’t have CNBC Pro, check out this second article at <em>Magic</em>-specific publication Star City Games:</p>
<ul>
<li><h4 id="hasbro-shares-plunge-after-bank-of-america-report-downgrades-companys-rating" class="anchored"><a href="https://articles.starcitygames.com/magic-the-gathering/hasbro-shares-plunge-after-bank-of-america-report-downgrades-companys-rating/">Hasbro Shares Plunge After Bank Of America Report Downgrades Company’s Rating</a></h4></li>
</ul>
<p>This story made me think over what I remembered about collecting and playing <em>Magic</em> in the 90s and 00s, and while doing some research to make sure I was actually remembering things correctly, I wrote down a lot more than I expected.</p>
<hr>
<section id="hasbro-wizards-of-the-coast-magic-the-gathering" class="level3">
<h3 class="anchored" data-anchor-id="hasbro-wizards-of-the-coast-magic-the-gathering">Hasbro, Wizards of the Coast, &amp; Magic: the Gathering</h3>
<p>Hasbro bought Wizards of the Coast in September of 1999. A <a href="https://money.cnn.com/1999/09/09/deals/hasbro/">CNN Money article</a> on the deal told readers “The agreement gives Hasbro, one of the biggest producers of toys and games, exclusive domain over Wizards’ best-known products …”, explicitly calling out “the Dungeons &amp; Dragons role-playing game” (of course) and “particularly its Pokemon trading card game – a wildly popular game among children”. No mention of lesser-known “Magic: the Gathering” (which wasn’t based on a popular tv show, hmm..)<sup>[1]</sup>, but that’s no surprise because it’s the turn of the millennium and Pokemon is positively exploding. Fast forward to October, 2022: Magic: the Gathering is <a href="https://articles.starcitygames.com/magic-the-gathering/magic-the-gathering-becomes-hasbros-first-1-billion-brand/">Hasbro’s first <strong>BILLION</strong> dollar brand</a>. In the face of the Pokemon behemoth of the late 90s, who could have said it would be Magic to break that ribbon? Well, some people at Hasbro, probably. But someone else too: me. Not because I knew (or know) anything, but because I loved (love) that damn game.</p>
<p>It’s September of 99, Magic is 6, Pokemon is nearly 3, and I am 11. And despite being smack in the bull’s eye of Pokemon’s target demographic, I’m already an avid Magic player, thanks in no small part to my older cousin who found and played the game long before I was old enough to (I have fond memories of looking at the wonderful artwork on his cards years before rediscovering the game in middle school). Hasbro made the purchase and I was too young to really <em>get it</em>, but some of the older guys at the local card shop where I sourced my habit lamented the end of an era. I <em>got it</em> a few years later, when they decided to <a href="https://mtg.fandom.com/wiki/Eighth_Edition#Card_frame">update the style of the frame</a>, or border surrounding the text and artwork of the card. I <em>got it</em> again years later when <a href="https://mtg.fandom.com/wiki/Double-faced_card">“double-faced” cards</a> were introduced, which could transform (or flip) to a different card printed on the back. This one was an atrocity, the back of a Magic card is beautiful and sacred.<sup>[2]</sup> At this point I had been playing competitively for more than a decade, and not long after made the decision to spend my time and money on music instead of Magic (those cards had appreciated a bit and sure bought a lot of recording equipment).</p>
<p>But let’s be real, all that stuff is pretty much superficial. Fans care about it, I cared about it, but the brand didn’t only <a href="https://www.forbes.com/sites/joeparlock/2021/02/09/magic-the-gathering-had-its-best-financial-year-ever-in-2020/?sh=33db86381f0a">survive</a>, it <a href="https://www.thegamer.com/2021-magic-the-gathering-best-year/">thrived</a>. Certainly none of these things were the “end-of-an-era” of a caliber that warranted CNBC articles about the BoA downgrading the company’s rating. Right? Maybe:</p>
<ul>
<li>Hasbro buys WotC in 1999, to the lament of some Magic players</li>
<li>Hasbro changes Magic cards in 2003, much to the lament of many more Magic players</li>
<li>!!! from <a href="https://en.wikipedia.org/wiki/Pok%C3%A9mon_Trading_Card_Game">Wikipedia</a>: “In June 2003, Nintendo transferred the publishing rights from Wizards of the Coast to The Pokémon Company”</li>
<li>Hasbro changes magic cards again in 2004, very much to the further lament of even more Magic players</li>
</ul>
<p>Nintendo bailed when things were chaotic, perhaps it was a sign of the beginning of a slow decline? Well, we’d have to ignore the fact the Magic continued to be wildly successful for 16 more years before the next cherry-picked part of my story, but perhaps.</p>
<p>Despite being years away from the game, I <em>got it</em> once again in 2020 when WotC announced a “The Walking Dead” crossover set, the first in what would eventually become the <a href="https://mtg.fandom.com/wiki/Universes_Beyond">“Universes Beyond”</a> sub-brand of Magic, whatever a “sub-brand” is. The game still holds a place in my heart and this decision made me feel some feelings, but I didn’t play any more so I tried not to have too many opinions. And there was also a pandemic going on I think. Anyway, WotC went on to release 10 more Universes Beyond sets between then and today, with four more on the way; these include such theme-conforming properties as Fortnite, Transformers, and Dr.&nbsp;Who. Grim, indeed.</p>
<p>So was the Walking Dead crossover set the real beginning of the end for Hasbro’s golden boy? If we define “end” to mean a CNBC article about the BoA downgrading the company’s rating, then yes, I think so.</p>
<p>But even given all the uncertainty around the future of Magic, we can all be sure of one thing: I sure miss playing that stupid game. And that stupid game is worth a billion dollars lol. That’s two things.</p>
<hr>
<p><sup>[1]</sup> An astute reader has pointed out that, while not based on a tv show, Magic tournaments were indeed featured on <a href="https://mtg.fandom.com/wiki/ESPN">ESPN2</a> - there is even <a href="https://www.youtube.com/watch?v=DQuXalg4PKs">footage on YouTube</a> (warning: kind of loud).</p>
<p><sup>[2]</sup> This is an opinion, but not really.</p>
<p><br></p>
<hr>


</section>

<p><br><br>This page lovingly generated by <a href="https://quarto.org/">Quarto</a> ❤️</p> ]]></description>
  <guid>https://n-sweep.github.io/posts/2022-11-19-hasbro-ruins-mtg/2022-11-19-hasbro-ruins-mtg.html</guid>
  <pubDate>Sat, 19 Nov 2022 05:00:00 GMT</pubDate>
  <media:content url="https://n-sweep.github.io/posts/2022-11-19-hasbro-ruins-mtg/images/c21-145-greed.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Raspberry Pi: Enable SSH &amp; Wifi on First Boot</title>
  <dc:creator>n sweep</dc:creator>
  <link>https://n-sweep.github.io/posts/2021-08-21-rpi-ssh-wif-setup/2021-08-21-rpi-ssh-wif-setup.html</link>
  <description><![CDATA[ 





<p><img src="https://n-sweep.github.io/posts/2021-08-21-rpi-ssh-wif-setup/images/Raspberry_pie.jpg"></p>
<section id="contents" class="level3">
<h3 class="anchored" data-anchor-id="contents">Contents:</h3>
<ul>
<li>Prep the SD Card
<ul>
<li>Download an Operating System</li>
<li>Flash the SD Card</li>
</ul></li>
<li>Enable SSH &amp; WiFi
<ul>
<li>SSH</li>
<li>WPA Supplicant</li>
</ul></li>
<li>Connect to the Pi
<ul>
<li>Open Connection with SSH</li>
<li>Secure &amp; Update the Pi</li>
</ul></li>
<li>Appendix
<ul>
<li>Optional: Using the Desktop GUI Remotely with VNC</li>
<li>Troubleshooting: WiFi not Connecting?</li>
</ul></li>
</ul>
</section>
<section id="i-love-raspberry-pi" class="level3">
<h3 class="anchored" data-anchor-id="i-love-raspberry-pi">I <em>love</em> <a href="http://www.raspberrypi.org">Raspberry Pi</a> 🥧</h3>
<p>And if you don’t, well, that’s an opinion and that’s okay. But for those of you who share my sentiment, you’ve likely found yourself in a similar situation:</p>
<p>You’ve got a brand new Pi, fresh from the oven - maybe it’s your first one - and now it’s time to boot it up! But… it’s just a little circuit board, it has no screen. No keyboard, touchpad or mouse either.</p>
<p>That’s no problem, though, it has an HDMI out! And (if you have the model B) 4 whole USB ports! So you reach into the nest of cables behind your tower to unplug your second monitor. Whoops, wrong one. Okay, next is a keyboard. You want to keep using your PC in case you need to troubleshoot, though. But there’s an old wired keyboard in the closet! Hmm, it’s a PS2 connection. You’re sure have an adaptor somewhere though…</p>
<p>And finally, hours later, your Pi is officially booted! But now it’s time for dinner and you’re kind of over the initial excitement of your new toy. And boy, do you not want to have to go through all of that again when you inevitably get your next Pi. I know I didn’t.</p>
<p>But, what if I told you it didn’t have to be this way? What if I told you we could skip all this inconvenience with nothing more than a couple little text files? What if I told you I thought I was going to make a <em>Matrix</em> reference, but Laurence Fishburne never actually says the words ‘what if I told you…’ in his monologue to Keanu?</p>
</section>
<section id="prep-the-sd-card" class="level1">
<h1>Prep the SD Card</h1>
<blockquote class="blockquote">
<h3 id="note" class="anchored"><strong>Note:</strong></h3>
<p>If you purchased a new Raspberry Pi, it probably came with a micro SD card. If it did not, pause here and acquire yourself one! We’ll need it to move any further.</p>
</blockquote>
<p>Right, let’s take a step back here. Before we can do anything with the Pi we need to install an operating system to boot. The Raspberry Pi doesn’t use a traditional hard drive with a SATA connection - instead, the whole operating system runs from flash memory on a micro SD card. So let’s get ourselves an OS and prepare our SD card.</p>
<section id="download-an-operating-system" class="level2">
<h2 class="anchored" data-anchor-id="download-an-operating-system">Download an Operating System</h2>
<p>Raspberry Pi is almost 10 years old now and there are a host of operating systems that the little board can run, but today we’re going to use the standard <em>Raspberry Pi OS</em> developed by the <a href="https://www.raspberrypi.org/about/">Raspberry Pi Foundation</a> for their namesake <a href="https://en.wikipedia.org/wiki/Single-board_computer">SBC</a>. Head on over to the <a href="https://www.raspberrypi.org/software/operating-systems/#raspberry-pi-os-32-bit">downloads page</a> and choose the version that’s best for you.</p>
<p><img src="https://n-sweep.github.io/posts/2021-08-21-rpi-ssh-wif-setup/images/download_rpi_os.jpg" width="800"></p>
<p>Most of the time I don’t need a GUI for my Pis so I’m choosing Lite, but if you want a desktop, go for it! (If you do, the middle selection is probably the best choice - we can always install more software later, and the recommended software download is almost 2.5x the size.) We’ll talk a little later about using the GUI remotely.</p>
</section>
<section id="flash-the-micro-sd" class="level2">
<h2 class="anchored" data-anchor-id="flash-the-micro-sd">Flash the Micro SD</h2>
<p>Now to flash our OS onto the micro SD card. There are <a href="https://www.raspberrypi.org/documentation/installation/installing-images/linux.md">many</a> <a href="https://www.raspberrypi.org/documentation/installation/installing-images/mac.md">different</a> <a href="https://www.raspberrypi.org/documentation/installation/installing-images/windows.md">ways</a> to accomplish this and today I’ll be using a Windows machine to flash the disk using <a href="https://www.balena.io/etcher/">balenaEcher</a> (which is also available on Mac OS). Select your OS image, <strong>make sure you’re choosing the correct drive</strong>, and before you click <strong>Flash!</strong>, <strong><em>check again that you’ve chosen the correct drive.</em></strong> The flashing process may take a few minutes. (Hopefully you chose the correct drive.)</p>
<p><img src="https://n-sweep.github.io/posts/2021-08-21-rpi-ssh-wif-setup/images/balena_rpi_os.jpg"></p>
</section>
</section>
<section id="enable-ssh-wifi" class="level1">
<h1>Enable SSH &amp; WiFi</h1>
<blockquote class="blockquote">
<h3 id="notes" class="anchored"><strong>Notes:</strong></h3>
<ol type="1">
<li>I’ve had trouble in the past getting the initial WiFi setup to work with other operating systems, such as DietPi. However, enabling SSH has always worked for me. If this is the case for you, just enable SSH, connect via ethernet and set up WiFi manually.</li>
<li>If you have a model of Pi without WiFi capabilities, skip the “Enabling WiFi with <code>wpa_supplicant.conf</code>” section. You can still enable SSH and connect to your Pi via ethernet.</li>
</ol>
</blockquote>
<p>You may need to eject and re-insert the card for it to show up in your filesystem. Once we’ve done that, you’ll notice the drive has been renamed <code>boot</code> and is full of new files. We don’t want to change anything in here, we’ll only be adding two new configuration files. Follow the instructions below to create the necessary files.</p>
<section id="enabling-ssh" class="level2">
<h2 class="anchored" data-anchor-id="enabling-ssh">Enabling SSH</h2>
<p>First, we’ll create an <em>empty</em> file named <code>ssh</code> with <em>no file extension</em>. If you’re using the terminal/command line, navigate into your mounted drive and enter one of the following commands based on your operating system. Easy!</p>
<section id="unix-linux-mac-os" class="level4">
<h4 class="anchored" data-anchor-id="unix-linux-mac-os">Unix (Linux / Mac OS)</h4>
<p><code>touch ssh</code></p>
</section>
<section id="windows" class="level4">
<h4 class="anchored" data-anchor-id="windows">Windows</h4>
<p><code>echo &gt; ssh</code></p>
<p>If you aren’t using the terminal/command line, this can also be done with a raw text editor like Notepad (or your favorite IDE). Simply open your editor and save the empty file with no extension - just make sure it’s a raw text editor (or IDE) and <strong>not</strong> a word processor like Microsoft Word!</p>
</section>
</section>
<section id="enabling-wifi-with-wpa_supplicant.conf" class="level2">
<h2 class="anchored" data-anchor-id="enabling-wifi-with-wpa_supplicant.conf">Enabling WiFi with <code>wpa_supplicant.conf</code> <span id="enabling-wifi"></span></h2>
<p>Next, we’ll specify our WiFi credentials with a file called <code>wpa_supplicant.conf</code>. Just like before, make sure to create this file with an IDE or raw text editor. Linux / Mac OS users can create and edit this file all in the terminal with the command <code>nano wpa_supplicant.conf</code>. Windows doesn’t offer a native way to edit files in the command line, but you can open Notepad easily with the command <code>notepad wpa_supplicant.conf</code>.</p>
<p>Unlike our <code>ssh</code> file, this one needs some content to have an effect. The example below is pretty basic, but it works for me. (If you have any trouble, check the <a href="https://man.voidlinux.org/wpa_supplicant.conf">documentation</a>.) Just replace <code>network_name</code> with the SSID you’d like the Pi to connect to and replace <code>password</code> with the associated password.</p>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb1-1"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">country</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>us</span>
<span id="cb1-2"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">update_config</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>1</span>
<span id="cb1-3"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">ctrl_interface</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>/var/run/wpa_supplicant</span>
<span id="cb1-4"></span>
<span id="cb1-5"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">network</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>{</span>
<span id="cb1-6"> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">scan_ssid</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>1</span>
<span id="cb1-7"> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">ssid</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"network_name"</span></span>
<span id="cb1-8"> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">psk</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"password"</span></span>
<span id="cb1-9"><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
<section id="and-thats-it" class="level3">
<h3 class="anchored" data-anchor-id="and-thats-it">And That’s It!</h3>
<p>Finally we can eject our SD card, insert it into the Pi and power it up! Give it a few moments to boot, and a few moments longer for it to connect to the network if you’re using WiFi.</p>
</section>
</section>
</section>
<section id="connecting-to-the-pi" class="level1">
<h1>Connecting to the Pi</h1>
<p>Now that our Pi is booted and connected to the network, we can connect to it with our local machine, but to do this we first need the Pi’s IP address. Often, the easiest way to do this is via the Devices list in your router’s web interface.</p>
<p>Your router’s IP address is typically something like <code>192.168.1.1</code> (mine is <code>192.168.0.1</code>) and you can connect to it by visiting that IP address in your web browser, e.g.&nbsp;http://192.168.1.1/. All routers are different, but a quick Google search with your router’s make and model number plus the words “web interface” should help you navigate yours. If you don’t know the login credentials, they are usually printed on a label somewhere on the router.</p>
<p>Once there, navigate to your router’s Devices or Clilents list and look for an IP address with the hostname “raspberrypi” - this is the default for a machine running Raspberry Pi OS. My Pi was given the IP address <code>192.168.0.41</code>, yours will probably be different.</p>
<blockquote class="blockquote">
<h3 id="notes-1" class="anchored"><strong>Notes</strong>:</h3>
<p>If you aren’t having luck interfacing with your router, the <a href="https://www.raspberrypi.org/documentation/computers/remote-access.html">Raspberry Pi Documentation</a> offers up some additional terminal-based methods for determining your IP address.</p>
</blockquote>
<section id="connect-over-the-terminal-with-ssh" class="level2">
<h2 class="anchored" data-anchor-id="connect-over-the-terminal-with-ssh">Connect Over the Terminal with SSH</h2>
<p>The time has come at last, we can finally connect with our Pi for real. Using our newly minted IP address, we’ll open up our terminal/command line and use the command <code>ssh pi@&lt;your-ip-address&gt;</code> to open a <a href="https://en.wikipedia.org/wiki/Secure_Shell">secure shell</a> connection to the Pi. The default password for a new Raspberry Pi OS install is <code>raspberry</code>.</p>
<p>Connecting for the first time will look something like this:</p>
<p><img src="https://n-sweep.github.io/posts/2021-08-21-rpi-ssh-wif-setup/images/ssh.gif"></p>
<section id="a-little-housekeeping" class="level3">
<h3 class="anchored" data-anchor-id="a-little-housekeeping">A Little Housekeeping</h3>
<p>Using our SSH connection, we’ll take two more quick steps to ensure our Pi is updated and secure:</p>
<ol type="1">
<li>Remember that default password of <code>raspberry</code>? That’s not terribly secure, so let’s change it with the command <code>passwd</code>.</li>
<li>We’ll <code>update</code> and <code>upgrade</code> our software to make sure everything’s up to date. These commands will take a bit of time, but you can chain them together with “<code>&amp;</code>”, automatically answer yes to the <code>upgrade</code> command with the flag “<code>-y</code>”, and go pour yourself some coffee while the process completes.</li>
</ol>
<div class="sourceCode" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb2-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 1. Change the default password</span></span>
<span id="cb2-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Remember, your passwords will not display as you type them</span></span>
<span id="cb2-3"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">$</span> passwd</span>
<span id="cb2-4"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">Changing</span> password for pi.</span>
<span id="cb2-5"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">Current</span> password:</span>
<span id="cb2-6"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">New</span> password:</span>
<span id="cb2-7"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">Retype</span> new password:</span>
<span id="cb2-8"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">passwd:</span> password updated successfully</span>
<span id="cb2-9"></span>
<span id="cb2-10"></span>
<span id="cb2-11"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 2. Update &amp; Upgrade</span></span>
<span id="cb2-12"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">$</span> sudo apt-get update</span>
<span id="cb2-13"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">$</span> sudo apt-get upgrade</span>
<span id="cb2-14"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># OR</span></span>
<span id="cb2-15"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Chain together &amp; answer 'yes'</span></span>
<span id="cb2-16"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">$</span> sudo apt-get update <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">&amp;&amp;</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sudo</span> apt-get upgrade <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-y</span></span>
<span id="cb2-17"></span>
<span id="cb2-18"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Now we wait!</span></span></code></pre></div>
<p>And congratulations, your Pi is ready to go! I can’t wait to see what you make with it!</p>
<p><br></p>
<section id="until-next-time" class="level4">
<h4 class="anchored" data-anchor-id="until-next-time">Until next time</h4>
<p><br> <br></p>
</section>
</section>
</section>
</section>
<section id="appendix" class="level1">
<h1>Appendix</h1>
<section id="optional-using-the-desktop-gui-remotely-with-vnc" class="level2">
<h2 class="anchored" data-anchor-id="optional-using-the-desktop-gui-remotely-with-vnc">Optional: Using the Desktop GUI Remotely with VNC</h2>
<p>So you downloaded the Raspberry Pi OS with desktop and now you want to use the GUI instead of a boring old terminal connection? No problem, we can do that with VNC!</p>
<blockquote class="blockquote">
<p><strong>From <a href="https://en.wikipedia.org/wiki/Virtual_Network_Computing">Wikipedia</a>:</strong><br>
Virtual Network Computing (VNC) is a graphical desktop-sharing system that uses the Remote Frame Buffer protocol (RFB) to remotely control another computer. It transmits the keyboard and mouse input from one computer to another, relaying the graphical-screen updates, over a network.</p>
</blockquote>
<p>Raspberry Pi OS comes pre-loaded with <a href="https://www.realvnc.com/en/">RealVNC</a>’s VNC Server, allowing it to be controlled remotely by another computer. To use it, we need to:</p>
<section id="enable-vnc-server-on-the-raspberry-pi" class="level4">
<h4 class="anchored" data-anchor-id="enable-vnc-server-on-the-raspberry-pi">- Enable VNC Server on the Raspberry Pi</h4>
<ol type="1">
<li>Connect to your Pi via SSH using the instructions above.</li>
<li>Start the configuration tool with the command <code>sudo raspi-config</code>. You’ll be met with a screen like this: <img src="https://n-sweep.github.io/posts/2021-08-21-rpi-ssh-wif-setup/images/raspi-config.jpg" width="800"></li>
<li>Navigate to <code>Interface Options</code>, then <code>VNC</code> and answer ‘Yes’ when asked to enable VNC.</li>
</ol>
</section>
<section id="install-vnc-viewer-on-our-local-machine-and-connect" class="level4">
<h4 class="anchored" data-anchor-id="install-vnc-viewer-on-our-local-machine-and-connect">- Install VNC Viewer on our Local Machine and Connect!</h4>
<ol type="1">
<li>Visit the VNC Viewer <a href="https://www.realvnc.com/en/connect/download/viewer/">download page</a> and install the appropriate software on your local machine.</li>
<li>Run the VNC viewer and enter your Pi’s IP address in the bar at the top of the window. (The application will warn us that it doesn’t regonize this server, which is normal since this is the first time we’ve connected to it.)</li>
<li>Finally, enter your credentials and voilà! You can use the Raspberry Pi’s desktop right in the VNC Viewer window!</li>
</ol>
<p><img src="https://n-sweep.github.io/posts/2021-08-21-rpi-ssh-wif-setup/images/raspi-desktop.jpg"></p>
</section>
</section>
<section id="troubleshooting-wifi-not-connecting" class="level2">
<h2 class="anchored" data-anchor-id="troubleshooting-wifi-not-connecting">Troubleshooting: WiFi not Connecting?</h2>
<p>Trying to connect via WiFi and can’t seem to find your Pi’s IP address on your network? First, make sure your model of Pi actually supports WiFi! Once you’ve done that, you may want to double-check the credentials in your <code>wpa_supplicant.conf</code> file and try again, but it’s typically faster and easier to just connect via ethernet, <code>ssh</code> into the machine and set up WiFi manually with the <code>raspi-config</code> tool.</p>
<ol type="1">
<li>Connect to your Pi via SSH using the instructions above.</li>
<li>Start the configuration tool with the command <code>sudo raspi-config</code>. You’ll be met with a screen like the one above.</li>
<li>Choose <code>System Options</code> and then <code>Wireless LAN</code>. You’ll be asked for your SSID and password, and you’re done!</li>
</ol>
<p><br></p>
<hr>


</section>
</section>

<p><br><br>This page lovingly generated by <a href="https://quarto.org/">Quarto</a> ❤️</p> ]]></description>
  <guid>https://n-sweep.github.io/posts/2021-08-21-rpi-ssh-wif-setup/2021-08-21-rpi-ssh-wif-setup.html</guid>
  <pubDate>Sat, 21 Aug 2021 04:00:00 GMT</pubDate>
  <media:content url="https://n-sweep.github.io/posts/2021-08-21-rpi-ssh-wif-setup/images/Raspberry_pie.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>How I Made This Blog With Github Pages, Jekyll and Docker</title>
  <dc:creator>n sweep</dc:creator>
  <link>https://n-sweep.github.io/posts/2021-07-05-how-i-made-this-blog/2021-07-05-how-i-made-this-blog.html</link>
  <description><![CDATA[ 





<section id="contents" class="level3">
<h3 class="anchored" data-anchor-id="contents">Contents:</h3>
<ul>
<li>Get Hosted</li>
<li>Add A Jekyll Theme
<ul>
<li>Pull Jekyll Docker Image</li>
<li>Build Site with Default Theme</li>
<li>Edit Site Fields</li>
<li>Custom Themes</li>
</ul></li>
<li>Make A Post!</li>
<li>Remove the Docker Image</li>
</ul>
</section>
<section id="i-think-docker-is-rad" class="level3">
<h3 class="anchored" data-anchor-id="i-think-docker-is-rad">I Think Docker is Rad 🐳</h3>
<p>I was always hesitant to learn Docker. It seemed really complex and, as a hobbyist programmer, unnecessary. Turns out it isn’t either of those things and also, it rules. Ever since I started studying data science, I use it regularly and I really enjoy the benefits of containerization.</p>
<p>Recently I learned how to use a <code>Dockerfile</code> to build custom Docker images and, after building an image based on Alpine Linux to run neovim and zsh for a consistent, portable text editor and python environment (I’ll write about that soon), I wanted to document the process for my future self. Coincidentally, I had also recently read how easy it was to host a website with GitHubPages and only needed an excuse to learn how. It’s all coming together.</p>
<p>We’re going to go through the process of hosting a blog on <a href="https://pages.github.com/">GitHub Pages</a>, making posts, and building its structure and theme using <a href="https://jekyllrb.com/">Jekyll</a> (whatever that is) with a little help from - you guessed it - Docker.</p>
</section>
<section id="hosting-with-github-pages" class="level1">
<h1>Hosting with Github Pages</h1>
<blockquote class="blockquote">
<p>Note: I completed these steps on a <code>Pop!_OS 21.04</code> machine.</p>
</blockquote>
<section id="first-some-prerequisites" class="level2">
<h2 class="anchored" data-anchor-id="first-some-prerequisites">First, Some Prerequisites</h2>
<p>We will need Git and Docker installed. Later, we’re going to use Docker to pull down a Jekyll image so we don’t have to install Jekyll and all its dependencies. If you have trouble with these commands, check these installation links for <a href="https://github.com/git-guides/install-git">Git</a> &amp; <a href="https://docs.docker.com/engine/install">Docker</a>.</p>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb1-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Update</span></span>
<span id="cb1-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sudo</span> apt-get update</span>
<span id="cb1-3"></span>
<span id="cb1-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Install Git</span></span>
<span id="cb1-5"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sudo</span> apt-get install git-all</span>
<span id="cb1-6"></span>
<span id="cb1-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Install Docker</span></span>
<span id="cb1-8"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sudo</span> apt-get install docker-ce docker-ce-cli containerd.io</span></code></pre></div>
</section>
<section id="create-a-new-github-repository" class="level2">
<h2 class="anchored" data-anchor-id="create-a-new-github-repository"><a href="https://docs.github.com/en/get-started/quickstart/create-a-repo">Create</a> A New GitHub Repository</h2>
<p>If you don’t know how, just visit the link above. Your repo should be named with your github username in the format <code>username.github.io</code> for GitHub to host it correctly.</p>
</section>
<section id="clone-the-repo-and-add-some-content" class="level2">
<h2 class="anchored" data-anchor-id="clone-the-repo-and-add-some-content">Clone the Repo and Add Some Content!</h2>
<p>Next, move to the directory where you would like to store your site’s files and clone the repo to your local machine. Navigate into the repo directory and create an index markdown file, which will serve as your site’s home page, and finally push your changes back up to GitHub:</p>
<div class="sourceCode" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb2-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Clone Repo</span></span>
<span id="cb2-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">git</span> clone https://github.com/username/username.github.io.git</span>
<span id="cb2-3"></span>
<span id="cb2-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Navigate into project folder</span></span>
<span id="cb2-5"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">cd</span> username.github.io</span>
<span id="cb2-6"></span>
<span id="cb2-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Create index.md and add some C O N T E N T</span></span>
<span id="cb2-8"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">echo</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"C O N T E N T"</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> index.md</span>
<span id="cb2-9"></span>
<span id="cb2-10"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Push changes</span></span>
<span id="cb2-11"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">git</span> add <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--all</span></span>
<span id="cb2-12"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">git</span> commit <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-m</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"initial commit"</span></span>
<span id="cb2-13"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">git</span> push <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-u</span> origin main</span></code></pre></div>
<p><br></p>
</section>
<section id="and-youre-finished" class="level2">
<h2 class="anchored" data-anchor-id="and-youre-finished">And You’re finished!</h2>
<p>Well done. Grab a cold beverage, pat yourself on the back, and visit <strong>https://<em>username</em>.github.io</strong> in a browser to view your handiwork.</p>
<p><img src="https://n-sweep.github.io/posts/2021-07-05-how-i-made-this-blog/images/content.jpg" width="800"></p>
<section id="looks-kinda-boring-though-doesnt-it" class="level3">
<h3 class="anchored" data-anchor-id="looks-kinda-boring-though-doesnt-it">… Looks Kinda Boring Though, Doesn’t It?</h3>
<p>Sure does. Why don’t we take GitHub’s <a href="https://docs.github.com/en/github-ae@latest/pages/setting-up-a-github-pages-site-with-jekyll/about-github-pages-and-jekyll">advice</a> and use Jekyll, whatever that is.</p>
</section>
</section>
</section>
<section id="adding-some-spice-with-a-jekyll-theme" class="level1">
<h1>Adding Some Spice with a Jekyll Theme</h1>
<p>From the GitHub <a href="https://docs.github.com/en/pages/setting-up-a-github-pages-site-with-jekyll/about-github-pages-and-jekyll">docs</a>:</p>
<blockquote class="blockquote">
<p>Jekyll is a static site generator with built-in support for GitHub Pages and a simplified build process. Jekyll takes Markdown and HTML files and creates a complete static website based on your choice of layouts…</p>
</blockquote>
<p>I’m not familiar with Jekyll in the slightest, but I am familiar with Docker, and a quick trip to Docker Hub yields an official <a href="https://hub.docker.com/r/jekyll/jekyll">Jekyll Docker image</a>! Now we can pull down the image and use Jekyll without installing it locally. Radical.</p>
<section id="pull-down-the-jekyll-docker-image" class="level2">
<h2 class="anchored" data-anchor-id="pull-down-the-jekyll-docker-image">Pull Down the Jekyll Docker Image</h2>
<p>If you try to call <code>docker run</code> on an image you don’t have locally, Docker will attempt to retrieve the image from Docker Hub if it exists. We’ll run the Jekyll version 3.8 image (I had a weird permissions problem with the latest build), pull it down from the hub, and open up a bash shell inside of it.</p>
<div class="sourceCode" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb3-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># You're probably still there but if not, navigate to the repo directory</span></span>
<span id="cb3-2"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">cd</span> /path/to/username.github.io</span>
<span id="cb3-3"></span>
<span id="cb3-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Pull down and open a shell in the Jekyll image</span></span>
<span id="cb3-5"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">docker</span> run <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--rm</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-it</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-p</span> 4000:4000 <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-v</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">${PWD}</span>:/srv/jekyll jekyll/jekyll:3.8 bash</span></code></pre></div>
<p>This may take a minute.</p>
<p><img src="https://n-sweep.github.io/posts/2021-07-05-how-i-made-this-blog/images/docker_install.gif"></p>
<p>While you wait for the Jekyll image to download, let’s talk about what this command is doing.</p>
<p>From the <a href="https://docs.docker.com/engine/reference/commandline/run/">docs</a>: &gt; The <code>docker run</code> command first <code>creates</code> a writeable container layer over the specified image, and then <code>starts</code> it using the specified command.</p>
<p>Simple enough. Here’s what the rest of it does:</p>
<ul>
<li><code>docker run --rm -it</code>
<ul>
<li>create a container that will be removed (<code>--rm</code>) when we’re finished with it and enble an interactive terminal connection (<code>-it</code>)*</li>
</ul></li>
<li><code>-p 4000:4000</code>
<ul>
<li>publish (or expose) port 4000 on the local machine to the same port inside the container (this is the port Jekyll uses to serve locally)</li>
<li>these ports do not have to match, eg. <code>-p 9999:80</code> could be a valid mapping</li>
<li>local port is always first: <code>local_port:container_port</code></li>
</ul></li>
<li><code>-v ${PWD}:/srv/jekyll</code>
<ul>
<li>mount the directory we’re currently in (<code>${PWD}</code>) to the directory that Jekyll uses to build the site inside the container (<code>/srv/jekyll</code>)</li>
<li>again, local is always first: <code>local_dir:container_dir</code></li>
</ul></li>
<li><code>jekyll/jekyll:3.8 bash</code>
<ul>
<li>specify that we want the official <code>jekyll/jekyll</code> image, version <code>3.8</code></li>
<li>start the container and open an interactive <code>bash</code> shell</li>
</ul></li>
</ul>
<p>You can find more information about the <code>docker run</code> flags in the <a href="https://docs.docker.com/engine/reference/commandline/run/">documentation</a><br>
* You can find a great explaination of the <code>-it</code> flags at this StackOverflow <a href="https://stackoverflow.com/a/40026942/11737314">answer</a></p>
<p><br></p>
<blockquote class="blockquote">
<h3 id="important-note" class="anchored"><strong>Important Note!</strong></h3>
</blockquote>
<blockquote class="blockquote">
<p>In a moment, we will use Jekyll to build the structure and theme for our site.<br>
By mapping our site’s local git repository to <code>/srv/jekyll</code> in the container, we allow Jekyll to save all the site files it generates locally in our repo. <em>These files are all GitHub needs to build our site</em> at <strong>https://<em>username</em>.github.io</strong>.<br>
This allows us to ditch our Docker container (and even the image) when we’re finished, freeing up the space taken up by Jekyll and its dependencies and leaving behind the site files for us to push to GitHub for hosting.</p>
</blockquote>
</section>
<section id="build-and-preview-your-site" class="level2">
<h2 class="anchored" data-anchor-id="build-and-preview-your-site">Build and Preview Your Site</h2>
<p>A nice feature of Jekyll is that it can serve your site locally, so you can check that you’re happy with your edits before pushing them up to your repo. So now that we’re in the shell inside our container, we’ll use Jekyll to create a new site, then serve it and take a look in the browser.</p>
<div class="sourceCode" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb4-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Instantiate new site</span></span>
<span id="cb4-2"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">jekyll</span> new .</span>
<span id="cb4-3"></span>
<span id="cb4-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Serve the site locally</span></span>
<span id="cb4-5"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">jekyll</span> serve</span></code></pre></div>
<p>This may take some time as well.</p>
<p><img src="https://n-sweep.github.io/posts/2021-07-05-how-i-made-this-blog/images/jekyll_new_serve.gif"></p>
<p>Great, now we can visit <strong>http://localhost:4000</strong> and see that we have the basic Jekyll theme applied to our page on our own machine before pushing the repo back to GitHub. Neat! 📷</p>
<p><img src="https://n-sweep.github.io/posts/2021-07-05-how-i-made-this-blog/images/jekyll_basic.jpg" width="800"></p>
</section>
<section id="editing-fields" class="level2">
<h2 class="anchored" data-anchor-id="editing-fields">Editing Fields</h2>
<p>You’ll probably notice that your website is populated with filler text like <code>Your Awesome Title</code> and <code>your-email@example.com</code>. These values can be changed in the <code>_config.yml</code> file, which was generated when we called <code>jekyll new .</code> earlier. Different themes can have different configurations, but the basics are pretty self explanitory. Here’s an exceprt from the auto-generated config file:</p>
<div class="sourceCode" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode yaml code-with-copy"><code class="sourceCode yaml"><span id="cb5-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Excerpt from default _config.yaml</span></span>
<span id="cb5-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># ...</span></span>
<span id="cb5-3"></span>
<span id="cb5-4"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">title</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> Your awesome title</span></span>
<span id="cb5-5"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">email</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> your-email@example.com</span></span>
<span id="cb5-6"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">description</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">: </span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">&gt;-</span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"> # this means to ignore newlines until "baseurl:"</span></span>
<span id="cb5-7">  Write an awesome description for your new site here. You can edit this</span>
<span id="cb5-8">  line in _config.yml. It will appear in your document head meta (for</span>
<span id="cb5-9">  Google search results) and in your feed.xml site description.</span>
<span id="cb5-10"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">baseurl</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">""</span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"> # the subpath of your site, e.g. /blog</span></span>
<span id="cb5-11"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">url</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">""</span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"> # the base hostname &amp; protocol for your site, e.g. http://example.com</span></span>
<span id="cb5-12"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">twitter_username</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> jekyllrb</span></span>
<span id="cb5-13"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">github_username</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  jekyll</span></span>
<span id="cb5-14"></span>
<span id="cb5-15"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Build settings</span></span>
<span id="cb5-16"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">markdown</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> kramdown</span></span>
<span id="cb5-17"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> minima</span></span>
<span id="cb5-18"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">plugins</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb5-19"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> jekyll-feed</span></span>
<span id="cb5-20"></span>
<span id="cb5-21"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># ...</span></span></code></pre></div>
<section id="what-to-change" class="level3">
<h3 class="anchored" data-anchor-id="what-to-change">What to change:</h3>
<ul>
<li>Change the <code>title</code>, the <code>description</code>, and your <code>email</code>
<ul>
<li>express yourself, be compelling and mesmerizing, a tour de force</li>
</ul></li>
<li>Change <code>url</code> and maybe <code>baseurl</code>
<ul>
<li><code>url</code> is the url of your site: <code>https://username.github.io</code></li>
<li>if your site files are in a subdirectory inside of your repo, <code>baseurl</code> should be equal to the path to your files, otherwise leave blank</li>
</ul></li>
<li>If you choose a custom theme, you may need to change <code>theme</code>
<ul>
<li>some themes come with their own <code>_config.yml</code> files</li>
</ul></li>
<li>Change custom variables
<ul>
<li>different themes have different settings</li>
<li>the default theme has <code>twitter_username</code> and <code>github_username</code></li>
<li>check your theme’s GitHub/documentation for instructions</li>
</ul></li>
</ul>
</section>
</section>
<section id="find-a-custom-theme" class="level2">
<h2 class="anchored" data-anchor-id="find-a-custom-theme">Find A Custom Theme!</h2>
<p>That’s better but you’ve gotta admit, the default theme is still pretty boring. So now it’s time to choose your own!</p>
<p>There are a lot to choose from, and the Jekyll documenatation has a <a href="https://jekyllrb.com/docs/themes/">good list</a> of resources for themes. I ended up at <a href="http://jekyllthemes.org/">jekyllthemes.org</a> and found <a href="https://zivlog.io/monophase/">Monophase</a>. Not much more exciting than the Jekyll default we just saw, but I was going for minimal.</p>
<p>Maybe <a href="https://longpdo.github.io/neumorphism/">Neumorphism</a> is more your style?</p>
<p>Or <a href="https://h01000110.github.io/windows-95/">Windows 95</a>?</p>
<p><img src="https://n-sweep.github.io/posts/2021-07-05-how-i-made-this-blog/images/windows95.jpg"></p>
<section id="installation" class="level3">
<h3 class="anchored" data-anchor-id="installation">Installation</h3>
<blockquote class="blockquote">
<p>Note: It probably goes without saying, but always be aware of the licensing associated with others’ code you plan to download and use. Most free Jekyll themes only require attribution and already have it built into the footer of the theme.</p>
</blockquote>
<blockquote class="blockquote">
<p>It also absolutely goes without saying, but remember McGruff the Crime Dog says “always be mindful of any code you download from anywhere”. This is (obviously) not a security blog!</p>
</blockquote>
<p>If you navigate to their GitHub repos, many of the themes at the links above have their own instructions for installation but for themes that don’t, it’s as easy as <a href="https://docs.github.com/en/get-started/quickstart/fork-a-repo">forking</a> and pulling the repo and tweaking as needed.</p>
<div class="sourceCode" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb6-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># First, fork the repo (see the link above)</span></span>
<span id="cb6-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Then clone locally</span></span>
<span id="cb6-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">git</span> clone https://github.com/username/windows-95</span></code></pre></div>
<p>Themes will have pages such as <code>index</code>, <code>about</code>, <code>archive</code>, etc… that can be edited to your liking.</p>
<p>We’ll leave further tweaking of style and layout as an exercise to the reader (because, to be honest, it’s an exercise for me also). Your theme of choice’s GitHub is usually a good place to start. There’s also <a href="https://www.google.com/search?client=firefox-b-1-d&amp;q=customize+jekyll+theme">google</a>.</p>
</section>
</section>
</section>
<section id="make-a-post" class="level1">
<h1>Make A Post!</h1>
<p>The time has come. This is what you’ve been training for. Unless of course you’ve chosen a different theme layout such as a landing page, CV, or gallery and this section is irrelevant to you.</p>
<p>Anyway, after completing the previous steps we should have a <code>_posts/</code> directory in our repo and, as luck would have it, we’re gonna keep our posts in there. Even if you haven’t downloaded a custom theme, the standard Jekyll theme created when we called <code>jekyll new .</code> should include a sample post in this directory. The sample includes includes instructions on creating your own posts. Make a copy and use it as a template!</p>
<p>As you edit your new post, use your locally hosted site at <strong>http://localhost:4000</strong> to check your work.</p>
<p>Once you’ve finished your post, push it back up to GitHub. This should look familiar from way back when we hosted our very first iteration:</p>
<div class="sourceCode" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb7-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Push changes</span></span>
<span id="cb7-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">git</span> add <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--all</span>   <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># See note above</span></span>
<span id="cb7-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">git</span> commit <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-m</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"publishing a post!"</span></span>
<span id="cb7-4"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">git</span> push <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-u</span> origin main</span></code></pre></div>
<blockquote class="blockquote">
<p>Note: as your repo gets more complex, you don’t always want to <code>git add --all</code>. Read <a href="https://git-scm.com/docs/gitignore">here</a> about using <code>.gitignore</code> or <code>git add</code> files individually.</p>
</blockquote>
<section id="done-for-real" class="level2">
<h2 class="anchored" data-anchor-id="done-for-real">Done for Real!</h2>
<p>Finally, head back over to <strong>https://<em>username</em>.github.io</strong>, and<a href="https://n-sweep.github.io/alts/how-i-made-this-blog/#done-for-real"></a>would you look at that! Your opinion on the internet! Out<em>standing!</em></p>
</section>
</section>
<section id="epilogue-removing-the-docker-image" class="level1">
<h1>Epilogue: Removing the Docker Image</h1>
<p>Now that you’ve hosted and edited your site, chosen your theme, created a blog post and pushed it all back up to GitHub, you may want to remove the Jekyll Docker image from your machine. You can always pull it back down and use it again as needed with the <code>docker run</code> command we used to create our container initially.</p>
<section id="if-your-jekyll-server-is-still-running" class="level2">
<h2 class="anchored" data-anchor-id="if-your-jekyll-server-is-still-running">If your Jekyll server is still running:</h2>
<p>Press <code>Ctrl+C</code> on your keyboard to stop the server and type <code>exit</code> to close the Docker container.</p>
<div class="sourceCode" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb8-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># ...</span></span>
<span id="cb8-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Auto-regeneration: enabled for '/srv/jekyll'</span></span>
<span id="cb8-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#     Server address: http://0.0.0.0:4000/</span></span>
<span id="cb8-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#   Server running... press ctrl-c to stop</span></span>
<span id="cb8-5"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>Ctrl <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">+</span> C<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span></span>
<span id="cb8-6"></span>
<span id="cb8-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Type 'exit' to close the docker container</span></span>
<span id="cb8-8"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">exit</span></span></code></pre></div>
</section>
<section id="remove-the-docker-image" class="level2">
<h2 class="anchored" data-anchor-id="remove-the-docker-image">Remove the Docker Image:</h2>
<p>Look at your Docker images and remove the Jekyll image.</p>
<div class="sourceCode" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb9-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># List your docker images</span></span>
<span id="cb9-2"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">docker</span> images</span>
<span id="cb9-3"></span>
<span id="cb9-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># REPOSITORY                    TAG        IMAGE ID       CREATED         SIZE</span></span>
<span id="cb9-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># alpine                        3          d4ff818577bc   3 weeks ago     5.6MB</span></span>
<span id="cb9-6"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># ubuntu                        latest     26b77e58432b   3 months ago    72.9MB</span></span>
<span id="cb9-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># jupyter/tensorflow-notebook   latest     804645d9e7e7   4 months ago    3.75GB</span></span>
<span id="cb9-8"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># jupyter/pyspark-notebook      latest     3eba429b2f1f   4 months ago    3.55GB</span></span>
<span id="cb9-9"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># mongo                         latest     ca8e14b1fda6   5 months ago    493MB</span></span>
<span id="cb9-10"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># jekyll/jekyll                 3.8        f68afd75b4c4   22 months ago   457MB</span></span>
<span id="cb9-11"></span>
<span id="cb9-12"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Remove the image</span></span>
<span id="cb9-13"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># REPOSITORY:   jekyll/jekyll</span></span>
<span id="cb9-14"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># TAG:          3.8</span></span>
<span id="cb9-15"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># ID:           f68afd75b4c4</span></span>
<span id="cb9-16"></span>
<span id="cb9-17"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Either are valid:</span></span>
<span id="cb9-18"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># docker image rm f68afd75b4c4</span></span>
<span id="cb9-19"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">docker</span> image rm jekyll/jekyll:3.8</span></code></pre></div>
<p>And congratulations, you’ve done it!</p>
<p><br></p>
<hr>


</section>
</section>

<p><br><br>This page lovingly generated by <a href="https://quarto.org/">Quarto</a> ❤️</p> ]]></description>
  <category>github-pages</category>
  <category>docker</category>
  <category>jekyll</category>
  <category>python</category>
  <category>github</category>
  <guid>https://n-sweep.github.io/posts/2021-07-05-how-i-made-this-blog/2021-07-05-how-i-made-this-blog.html</guid>
  <pubDate>Mon, 05 Jul 2021 04:00:00 GMT</pubDate>
  <media:content url="https://n-sweep.github.io/posts/2021-07-05-how-i-made-this-blog/images/content.jpg" medium="image" type="image/jpeg"/>
</item>
</channel>
</rss>
